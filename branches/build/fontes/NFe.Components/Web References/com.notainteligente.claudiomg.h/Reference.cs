//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NFe.Components.com.notainteligente.claudiomg.h {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    // CODEGEN: The operation binding 'ConsultarLoteRps' from namespace 'urn:notainteligente.com' was ignored.  Specifying a type for use=literal messages is not supported. Type name='string' from targetNamespace='http://www.w3.org/2001/XMLSchema' cannot be used as top-level any element.
    // CODEGEN: The operation binding 'RecepcionarLoteRps' from namespace 'urn:notainteligente.com' was ignored.  Specifying a type for use=literal messages is not supported. Type name='string' from targetNamespace='http://www.w3.org/2001/XMLSchema' cannot be used as top-level any element.
    // CODEGEN: The operation binding 'GerarNfse' from namespace 'urn:notainteligente.com' was ignored.  Specifying a type for use=literal messages is not supported. Type name='string' from targetNamespace='http://www.w3.org/2001/XMLSchema' cannot be used as top-level any element.
    // CODEGEN: The operation binding 'CancelarNfse' from namespace 'urn:notainteligente.com' was ignored.  Specifying a type for use=literal messages is not supported. Type name='string' from targetNamespace='http://www.w3.org/2001/XMLSchema' cannot be used as top-level any element.
    // CODEGEN: The operation binding 'SubstituirNfse' from namespace 'urn:notainteligente.com' was ignored.  Specifying a type for use=literal messages is not supported. Type name='string' from targetNamespace='http://www.w3.org/2001/XMLSchema' cannot be used as top-level any element.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="api_binding", Namespace="urn:notainteligente.com")]
    public partial class service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public service() {
            this.Url = global::NFe.Components.Properties.Settings.Default.NFe_Components_com_notainteligente_claudiomg_h_service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nfse.abrasf.org.br/RecepcionarLoteRps", RequestElementName = "RecepcionarLoteRpsRequest", RequestNamespace = "http://nfse.abrasf.org.br", ResponseNamespace = "http://nfse.abrasf.org.br", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("outputXML", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RecepcionarLoteRps([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string nfseDadosMsg)
        {
            object[] results = this.Invoke("RecepcionarLoteRps", new object[] {                       
                        nfseDadosMsg});
            return ((string)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nfse.abrasf.org.br/ConsultarLoteRps", RequestElementName = "ConsultarLoteRpsRequest", RequestNamespace = "http://nfse.abrasf.org.br", ResponseNamespace = "http://nfse.abrasf.org.br", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("outputXML", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ConsultarLoteRps([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string nfseDadosMsg)
        {
            object[] results = this.Invoke("ConsultarLoteRps", new object[] {
                        nfseDadosMsg});
            return ((string)(results[0]));
        }
    }
}

#pragma warning restore 1591