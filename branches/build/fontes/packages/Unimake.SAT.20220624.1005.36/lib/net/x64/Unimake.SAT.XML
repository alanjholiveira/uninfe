<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Unimake.SAT</name>
    </assembly>
    <members>
        <member name="T:Unimake.SAT.Abstract.Servico.ResponseBase">
            <summary>
            Abstração dos objetos de retorno dos serviços
            </summary>
        </member>
        <member name="F:Unimake.SAT.Abstract.Servico.ResponseBase._CodigoMensagem">
            <summary>
            Código da mensagem do SAT
            </summary>
        </member>
        <member name="F:Unimake.SAT.Abstract.Servico.ResponseBase._CodigoSEFAZ">
            <summary>
            Código da Mensagem do SEFAZ
            </summary>
        </member>
        <member name="F:Unimake.SAT.Abstract.Servico.ResponseBase._Mensagem">
            <summary>
            Mensagem do SAT
            </summary>
        </member>
        <member name="P:Unimake.SAT.Abstract.Servico.ResponseBase._ArquivoCFe">
            <summary>
            XML de retorno
            </summary>
        </member>
        <member name="M:Unimake.SAT.Abstract.Servico.ResponseBase.ConverterResposta(System.String)">
            <summary>
            Converter o array de resposta evitando colunas nulas
            </summary>
            <param name="response">reposta do sat</param>
            <returns></returns>
        </member>
        <member name="P:Unimake.SAT.Abstract.Servico.ResponseBase.ArquivoCFe">
            <summary>
            Mensagem de Log
            </summary>
        </member>
        <member name="P:Unimake.SAT.Abstract.Servico.ResponseBase.CodigoMensagem">
            <summary>
            Código da mensagem do SAT
            </summary>
        </member>
        <member name="P:Unimake.SAT.Abstract.Servico.ResponseBase.CodigoSEFAZ">
            <summary>
            Código da Mensagem do SEFAZ
            </summary>
        </member>
        <member name="P:Unimake.SAT.Abstract.Servico.ResponseBase.Mensagem">
            <summary>
            Mensagem do SAT
            </summary>
        </member>
        <member name="P:Unimake.SAT.Abstract.Servico.ResponseBase.MensagemSEFAZ">
            <summary>
            Mensagem do SEFAZ
            </summary>
        </member>
        <member name="P:Unimake.SAT.Abstract.Servico.ResponseBase.TimeStamp">
            <summary>
            Data da emissão
            </summary>
        </member>
        <member name="T:Unimake.SAT.Abstract.SATBase">
            <summary>
            Abstração do serviço de comunicação com equipamento SAT
            </summary>
        </member>
        <member name="P:Unimake.SAT.Abstract.SATBase.CodigoAtivacao">
            <summary>
            Senha definida pelo contribuinte no software de ativação (vide 2.1.1 da Especificação de Requisitos)
            </summary>
        </member>
        <member name="P:Unimake.SAT.Abstract.SATBase.NumeroSessao">
            <summary>
            Gera valor aleatório para numero de sessão
            </summary>
        </member>
        <member name="P:Unimake.SAT.Abstract.SATBase.Fabricante">
            <summary>
            Marca do aparelho SAT
            </summary>
        </member>
        <member name="M:Unimake.SAT.Abstract.SATBase.#ctor(Unimake.SAT.Enuns.Fabricante,System.String)">
            <summary>
            Construtor
            </summary>
            <param name="fabricante">marca do fabricante</param>
            <param name="codigoAtivacao">código de ativação</param>
        </member>
        <member name="M:Unimake.SAT.Abstract.SATBase.AssociarAssinatura(System.String,System.String)">
            <summary>
            O contribuinte deverá associar a assinatura do Aplicativo Comercial com o SAT através da
            função AssociarAssinatura.
            </summary>
            <param name="CNPJvalue">
            CNPJ da empresa desenvolvedora do Aplicativo Comercial + CNPJ do Emitente (vide 2.1.3 da
            Especificação de Requisitos)
            </param>
            <param name="assinaturaCNPJs">
            Assinatura digital conjunto "CNPJ Software House" + "CNPJ do estabelecimento comercial".
            (vide 2.1.3 da Especificação de Requisitos)
            </param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Abstract.SATBase.AtivarSAT(System.Int32,System.String,System.Int32)">
            <summary>
            Esta função faz parte do processo de ativação do Equipamento SAT e será responsável por
            enviar ao SAT qual o tipo de ativação será efetuada pelo Contribuinte. SubComando: 1 -
            Tipo de Certificado = AC-SAT/SEFAZ 2 - Tipo de Certificado = ICP-BRASIL 3 - Renovação do
            Certificado ICP-BRASIL
            </summary>
            <param name="subComando">
            Identificador do tipo de Certificado, descritos na tabela 15
            </param>
            <param name="CNPJ">CNPJ do contribuinte, somente números</param>
            <param name="cUF">
            Código do Estado da Federação, segundo tabela do IBGE, onde o SAT será ativado
            </param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Abstract.SATBase.AtualizarSoftwareSAT">
            <summary>
            Documentação não encontrada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Abstract.SATBase.BloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            bloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Abstract.SATBase.CancelarUltimaVenda(System.String,System.String)">
            <summary>
            O envio dos dados de cancelamento da venda ocorrerá de acordo com as definições a seguir.
            </summary>
            <param name="chave">
            Chave de acesso do CF-e-SAT a ser cancelado precedida do literal 'CFe' (vide 4.7 da
            Especificação de Requisitos)
            </param>
            <param name="dadosCancelamento">
            refere-se aos dados da venda gerados pelo AC e utilizados para compor o CF-e-SAT de
            cancelamento(vide 4.2.3 da Especificação de Requisitos)
            </param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Abstract.SATBase.ConfigurarInterfaceDeRede(System.String)">
            <summary>
            O AC, ou outro software fornecido pelo Fabricante, poderá configurar a interface de
            comunicação do Equipamento SAT com a rede local do estabelecimento comercial através do
            envio de um arquivo de configuração no padrão XML.
            </summary>
            <param name="dadosConfiguracao">Arquivo de configuração no formato XML.</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Abstract.SATBase.ConsultarNumeroSessao(System.Int32)">
            <summary>
            O AC poderá verificar se a última sessão requisitada foi processada em caso de não
            recebimento do retorno da operação.O equipamento SAT-CF-e retornará exatamente o
            resultado da sessão consultada.
            </summary>
            <param name="cNumeroDeSessao">Número de sessão a ser consultado no SAT-CF-e</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Abstract.SATBase.ConsultarSAT">
            <summary>
            Esta função é usada para testes de comunicação entre o AC e o Equipamento SAT.
            Header: char* ConsultarSAT(int numeroSessao);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Abstract.SATBase.ConsultarStatusOperacional">
            <summary>
            Essa função é responsável por verificar a situação de funcionamento do Equipamento SAT
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Abstract.SATBase.DesbloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            desbloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Abstract.SATBase.EnviarDadosVenda(System.String)">
            <summary>
            Esta função faz parte do processo de envio dos dados de venda do AC para o Equipamento SAT.
            </summary>
            <param name="dadosVenda">
            refere-se aos dados de venda gerados pelo AC e utilizados para compor o CF-e-SAT. (2.1.4
            da Especificação de Requisitos)
            </param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Abstract.SATBase.ExtrairLogs">
            <summary>
            O Aplicativo Comercial poderá extrair os arquivos de registro do Equipamento SAT por meio
            da função ExtrairLogs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Abstract.SATBase.TesteFimAFim(System.String)">
            <summary>
            Esta função consiste em um teste de comunicação entre o AC, o Equipamento SAT e a SEFAZ.
            </summary>
            <param name="dadosVenda">
            refere-se aos dados de venda fictícios gerados pelo AC e utilizados para compor o
            CF-e-SAT de teste. (vide 2.1.4 da Especificação de Requisitos)
            </param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Abstract.SATBase.TrocarCodigoDeAtivacao(System.String,System.String,System.String)">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar a
            troca do código de ativação a qualquer momento.
            </summary>
            <param name="opcao">
            Refere-se a opção do conteúdo do parâmetro "codigoDeAtivacao", sendo : 1 - Código de
            Ativação 2 - Código de Ativação de Emergência
            </param>
            <param name="novoCodigo">Novo código de ativação escolhido pelo contribuinte</param>
            <param name="confNovoCodigo">Confirmação do novo código de ativação</param>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Constants">
            <summary>
            Constantes do SAT
            </summary>
        </member>
        <member name="T:Unimake.SAT.Constants.LibaryFiles">
            <summary>
            Constantes para as DLLs
            </summary>
        </member>
        <member name="F:Unimake.SAT.Constants.LibaryFiles.Bematech">
            <summary>
            Nome da DLL da Bematech
            </summary>
        </member>
        <member name="F:Unimake.SAT.Constants.LibaryFiles.Control_ID">
            <summary>
            Nome da DLL da Control ID
            </summary>
        </member>
        <member name="F:Unimake.SAT.Constants.LibaryFiles.Daruma">
            <summary>
            Nome da DLL da Daruma
            </summary>
        </member>
        <member name="F:Unimake.SAT.Constants.LibaryFiles.Dimep">
            <summary>
            Nome da DLL da Dimep
            </summary>
        </member>
        <member name="F:Unimake.SAT.Constants.LibaryFiles.Elgin">
            <summary>
            Nome da DLL da Elgin
            </summary>
        </member>
        <member name="F:Unimake.SAT.Constants.LibaryFiles.Elgin_II">
            <summary>
            Nome da DLL da Elgin
            </summary>
        </member>
        <member name="F:Unimake.SAT.Constants.LibaryFiles.Elgin_Smart">
            <summary>
            Nome da DLL da Elgin(Smart SAT)
            </summary>
        </member>
        <member name="F:Unimake.SAT.Constants.LibaryFiles.Emulador">
            <summary>
            Nome da DLL do emulador
            </summary>
        </member>
        <member name="F:Unimake.SAT.Constants.LibaryFiles.Epson">
            <summary>
            Nome da DLL da Epson
            </summary>
        </member>
        <member name="F:Unimake.SAT.Constants.LibaryFiles.Jetway">
            <summary>
            Nome da DLL da Jetway
            </summary>
        </member>
        <member name="F:Unimake.SAT.Constants.LibaryFiles.Kryptus">
            <summary>
            Nome da DLL da Kryptus
            </summary>
        </member>
        <member name="F:Unimake.SAT.Constants.LibaryFiles.Nitere">
            <summary>
            Nome da DLL da Nitere
            </summary>
        </member>
        <member name="F:Unimake.SAT.Constants.LibaryFiles.Sweda">
            <summary>
            Nome da DLL da sweda
            </summary>
        </member>
        <member name="F:Unimake.SAT.Constants.LibaryFiles.Tanca">
            <summary>
            Nome da DLL da Tanca
            </summary>
        </member>
        <member name="T:Unimake.SAT.Fabricante.Daruma">
            <summary>
            Classe responsável pela comunicação com a DLL Daruma
            </summary>
            <summary>
            Classe responsável pela comunicação com a DLL Daruma
            </summary>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.AssociarAssinatura(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço AssociarAssinatura
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJvalue">CNPJ</param>
            <param name="assinaturaCNPJs">Assinatura</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.AtivarSAT(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço AtivarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="subComando">Sub-comando</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJ">CNPJ</param>
            <param name="cUF">UF</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.AtualizarSoftwareSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço AtualizarSoftwareSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.BloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço BloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.CancelarUltimaVenda(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço CancelarUltimaVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="chave">Chave de acesso</param>
            <param name="dadosCancelamento">XML do cancelamento</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.ComunicarCertificadoICPBRASIL(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ComunicarCertificadoICPBRASIL
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="certificado">Cerificado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.ConfigurarInterfaceDeRede(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ConfigurarInterfaceDeRede
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosConfiguracao">XML de Configuração</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.ConsultarNumeroSessao(System.Int32,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarNumeroSessao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="cNumeroDeSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.ConsultarSAT(System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.ConsultarStatusOperacional(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ConsultarStatusOperacional
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.DesbloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço DesbloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.EnviarDadosVenda(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço EnviarDadosVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.ExtrairLogs(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ExtrairLogs
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.TesteFimAFim(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TesteFimAFim
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.TrocarCodigoDeAtivacao(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TrocarCodigoDeAtivacao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="opcao">Opção</param>
            <param name="novoCodigo">Nova código de ativação</param>
            <param name="confNovoCodigo">Confirmação do código de confirmação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.#ctor(Unimake.SAT.Enuns.Fabricante,System.String)">
            <summary>
            Construtor
            </summary>
            <param name="fabricante"></param>
            <param name="codigoAtivacao"></param>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.AssociarAssinatura(System.String,System.String)">
            <summary>
            O contribuinte deverá associar a assinatura do Aplicativo Comercial com o SAT através da
            função AssociarAssinatura.
            </summary>
            <param name="CNPJvalue">CNPJ da empresa desenvolvedora do Aplicativo Comercial + CNPJ do Emitente (vide 2.1.3 da Especificação de Requisitos)</param>
            <param name="assinaturaCNPJs">Assinatura digital conjunto "CNPJ Software House" + "CNPJ do estabelecimento comercial". (vide 2.1.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.AtivarSAT(System.Int32,System.String,System.Int32)">
            <summary>
            Esta função faz parte do processo de ativação do Equipamento SAT e será responsável por enviar ao SAT qual o tipo de ativação será efetuada pelo Contribuinte.
            SubComando:
            1  -  Tipo de Certificado = AC-SAT/SEFAZ
            2  -  Tipo de Certificado = ICP-BRASIL
            3  -  Renovação do Certificado ICP-BRASIL
            </summary>
            <param name="subComando">Identificador do tipo de Certificado, descritos na tabela 15</param>
            <param name="CNPJ">CNPJ do contribuinte, somente números</param>
            <param name="cUF">Código do Estado da Federação, segundo tabela do IBGE, onde o SAT será ativado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.AtualizarSoftwareSAT">
            <summary>
            Documentação não encontrada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.BloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            bloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.CancelarUltimaVenda(System.String,System.String)">
            <summary>
            O envio dos dados de cancelamento da venda ocorrerá de acordo com as definições a seguir.
            </summary>
            <param name="chave">Chave de acesso do CF-e-SAT a ser cancelado precedida do literal 'CFe' (vide 4.7 da Especificação de Requisitos)</param>
            <param name="dadosCancelamento">refere-se aos dados da venda gerados pelo AC e utilizados para compor o CF-e-SAT de cancelamento(vide 4.2.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.ConfigurarInterfaceDeRede(System.String)">
            <summary>
            O AC, ou outro software fornecido pelo Fabricante, poderá configurar a interface de
            comunicação do Equipamento SAT com a rede local do estabelecimento comercial através do envio de um arquivo de configuração no padrão XML.
            </summary>
            <param name="dadosConfiguracao">Arquivo de configuração no formato XML.</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.ConsultarNumeroSessao(System.Int32)">
            <summary>
            O AC poderá verificar se a última sessão requisitada foi processada em caso de não
            recebimento do retorno da operação.O equipamento SAT-CF-e retornará exatamente o
            resultado da sessão consultada.
            </summary>
            <param name="cNumeroDeSessao">Número de sessão a ser consultado no SAT-CF-e</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.ConsultarSAT">
            <summary>
            Esta função é usada para testes de comunicação entre o AC e o Equipamento SAT.
            Header: char* ConsultarSAT(int numeroSessao);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.ConsultarStatusOperacional">
            <summary>
            Essa função é responsável por verificar a situação de funcionamento do Equipamento SAT
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.DesbloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            desbloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.EnviarDadosVenda(System.String)">
            <summary>
            Esta função faz parte do processo de envio dos dados de venda do AC para o Equipamento SAT.
            </summary>
            <param name="dadosVenda"> refere-se aos dados de venda gerados pelo AC e utilizados para compor o CF-e-SAT. (2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.ExtrairLogs">
            <summary>
            O Aplicativo Comercial poderá extrair os arquivos de registro do Equipamento SAT por meio
            da função ExtrairLogs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.TesteFimAFim(System.String)">
            <summary>
            Esta função consiste em um teste de comunicação entre o AC, o Equipamento SAT e a SEFAZ.
            </summary>
            <param name="dadosVenda">refere-se aos dados de venda fictícios gerados pelo AC e utilizados para compor o CF-e-SAT de teste. (vide 2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Daruma.TrocarCodigoDeAtivacao(System.String,System.String,System.String)">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar a troca do código de ativação a qualquer momento.
            </summary>
            <param name="opcao">Refere-se a opção do conteúdo do parâmetro "codigoDeAtivacao", sendo :
            1 - Código de Ativação
            2 - Código de Ativação de Emergência
            </param>
            <param name="novoCodigo">Novo código de ativação escolhido pelo contribuinte</param>
            <param name="confNovoCodigo">Confirmação do novo código de ativação</param>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Fabricante.Control_ID">
            <summary>
            Classe responsável pela comunicação com a DLL ControlID
            </summary>
            <summary>
            Classe responsável pela comunicação com a DLL ControlID
            </summary>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.#ctor(Unimake.SAT.Enuns.Fabricante,System.String)">
            <summary>
            Construtor
            </summary>
            <param name="fabricante"></param>
            <param name="codigoAtivacao"></param>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.AssociarAssinatura(System.String,System.String)">
            <summary>
            O contribuinte deverá associar a assinatura do Aplicativo Comercial com o SAT através da
            função AssociarAssinatura.
            </summary>
            <param name="CNPJvalue">CNPJ da empresa desenvolvedora do Aplicativo Comercial + CNPJ do Emitente (vide 2.1.3 da Especificação de Requisitos)</param>
            <param name="assinaturaCNPJs">Assinatura digital conjunto "CNPJ Software House" + "CNPJ do estabelecimento comercial". (vide 2.1.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.AtivarSAT(System.Int32,System.String,System.Int32)">
            <summary>
            Esta função faz parte do processo de ativação do Equipamento SAT e será responsável por enviar ao SAT qual o tipo de ativação será efetuada pelo Contribuinte.
            SubComando:
            1  -  Tipo de Certificado = AC-SAT/SEFAZ
            2  -  Tipo de Certificado = ICP-BRASIL
            3  -  Renovação do Certificado ICP-BRASIL
            </summary>
            <param name="subComando">Identificador do tipo de Certificado, descritos na tabela 15</param>
            <param name="CNPJ">CNPJ do contribuinte, somente números</param>
            <param name="cUF">Código do Estado da Federação, segundo tabela do IBGE, onde o SAT será ativado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.AtualizarSoftwareSAT">
            <summary>
            Documentação não encontrada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.BloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            bloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.CancelarUltimaVenda(System.String,System.String)">
            <summary>
            O envio dos dados de cancelamento da venda ocorrerá de acordo com as definições a seguir.
            </summary>
            <param name="chave">Chave de acesso do CF-e-SAT a ser cancelado precedida do literal 'CFe' (vide 4.7 da Especificação de Requisitos)</param>
            <param name="dadosCancelamento">refere-se aos dados da venda gerados pelo AC e utilizados para compor o CF-e-SAT de cancelamento(vide 4.2.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.ConfigurarInterfaceDeRede(System.String)">
            <summary>
            O AC, ou outro software fornecido pelo Fabricante, poderá configurar a interface de
            comunicação do Equipamento SAT com a rede local do estabelecimento comercial através do envio de um arquivo de configuração no padrão XML.
            </summary>
            <param name="dadosConfiguracao">Arquivo de configuração no formato XML.</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.ConsultarNumeroSessao(System.Int32)">
            <summary>
            O AC poderá verificar se a última sessão requisitada foi processada em caso de não
            recebimento do retorno da operação.O equipamento SAT-CF-e retornará exatamente o
            resultado da sessão consultada.
            </summary>
            <param name="cNumeroDeSessao">Número de sessão a ser consultado no SAT-CF-e</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.ConsultarSAT">
            <summary>
            Esta função é usada para testes de comunicação entre o AC e o Equipamento SAT.
            Header: char* ConsultarSAT(int numeroSessao);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.ConsultarStatusOperacional">
            <summary>
            Essa função é responsável por verificar a situação de funcionamento do Equipamento SAT
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.DesbloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            desbloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.EnviarDadosVenda(System.String)">
            <summary>
            Esta função faz parte do processo de envio dos dados de venda do AC para o Equipamento SAT.
            </summary>
            <param name="dadosVenda"> refere-se aos dados de venda gerados pelo AC e utilizados para compor o CF-e-SAT. (2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.ExtrairLogs">
            <summary>
            O Aplicativo Comercial poderá extrair os arquivos de registro do Equipamento SAT por meio
            da função ExtrairLogs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.TesteFimAFim(System.String)">
            <summary>
            Esta função consiste em um teste de comunicação entre o AC, o Equipamento SAT e a SEFAZ.
            </summary>
            <param name="dadosVenda">refere-se aos dados de venda fictícios gerados pelo AC e utilizados para compor o CF-e-SAT de teste. (vide 2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.TrocarCodigoDeAtivacao(System.String,System.String,System.String)">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar a troca do código de ativação a qualquer momento.
            </summary>
            <param name="opcao">Refere-se a opção do conteúdo do parâmetro "codigoDeAtivacao", sendo :
            1 - Código de Ativação
            2 - Código de Ativação de Emergência
            </param>
            <param name="novoCodigo">Novo código de ativação escolhido pelo contribuinte</param>
            <param name="confNovoCodigo">Confirmação do novo código de ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.AssociarAssinatura(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço AssociarAssinatura
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJvalue">CNPJ</param>
            <param name="assinaturaCNPJs">Assinatura</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.AtivarSAT(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço AtivarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="subComando">Sub-comando</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJ">CNPJ</param>
            <param name="cUF">UF</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.AtualizarSoftwareSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço AtualizarSoftwareSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.BloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço BloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.CancelarUltimaVenda(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço CancelarUltimaVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="chave">Chave de acesso</param>
            <param name="dadosCancelamento">XML do cancelamento</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.ComunicarCertificadoICPBRASIL(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ComunicarCertificadoICPBRASIL
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="certificado">Cerificado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.ConfigurarInterfaceDeRede(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ConfigurarInterfaceDeRede
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosConfiguracao">XML de Configuração</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.ConsultarNumeroSessao(System.Int32,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarNumeroSessao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="cNumeroDeSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.ConsultarSAT(System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.ConsultarStatusOperacional(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ConsultarStatusOperacional
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.DesbloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço DesbloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.EnviarDadosVenda(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço EnviarDadosVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.ExtrairLogs(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ExtrairLogs
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.TesteFimAFim(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TesteFimAFim
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Control_ID.TrocarCodigoDeAtivacao(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TrocarCodigoDeAtivacao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="opcao">Opção</param>
            <param name="novoCodigo">Nova código de ativação</param>
            <param name="confNovoCodigo">Confirmação do código de confirmação</param>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Fabricante.ElginSmart">
            <summary>
            Classe responsável pela comunicação com a DLL Elgin
            </summary>
            <summary>
            Classe responsável pela comunicação com a DLL Elgin
            </summary>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.#ctor(Unimake.SAT.Enuns.Fabricante,System.String)">
            <summary>
            Construtor
            </summary>
            <param name="fabricante"></param>
            <param name="codigoAtivacao"></param>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.AssociarAssinatura(System.String,System.String)">
            <summary>
            O contribuinte deverá associar a assinatura do Aplicativo Comercial com o SAT através da
            função AssociarAssinatura.
            </summary>
            <param name="CNPJvalue">CNPJ da empresa desenvolvedora do Aplicativo Comercial + CNPJ do Emitente (vide 2.1.3 da Especificação de Requisitos)</param>
            <param name="assinaturaCNPJs">Assinatura digital conjunto "CNPJ Software House" + "CNPJ do estabelecimento comercial". (vide 2.1.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.AtivarSAT(System.Int32,System.String,System.Int32)">
            <summary>
            Esta função faz parte do processo de ativação do Equipamento SAT e será responsável por enviar ao SAT qual o tipo de ativação será efetuada pelo Contribuinte.
            SubComando:
            1  -  Tipo de Certificado = AC-SAT/SEFAZ
            2  -  Tipo de Certificado = ICP-BRASIL
            3  -  Renovação do Certificado ICP-BRASIL
            </summary>
            <param name="subComando">Identificador do tipo de Certificado, descritos na tabela 15</param>
            <param name="CNPJ">CNPJ do contribuinte, somente números</param>
            <param name="cUF">Código do Estado da Federação, segundo tabela do IBGE, onde o SAT será ativado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.AtualizarSoftwareSAT">
            <summary>
            Documentação não encontrada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.BloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            bloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.CancelarUltimaVenda(System.String,System.String)">
            <summary>
            O envio dos dados de cancelamento da venda ocorrerá de acordo com as definições a seguir.
            </summary>
            <param name="chave">Chave de acesso do CF-e-SAT a ser cancelado precedida do literal 'CFe' (vide 4.7 da Especificação de Requisitos)</param>
            <param name="dadosCancelamento">refere-se aos dados da venda gerados pelo AC e utilizados para compor o CF-e-SAT de cancelamento(vide 4.2.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.ConfigurarInterfaceDeRede(System.String)">
            <summary>
            O AC, ou outro software fornecido pelo Fabricante, poderá configurar a interface de
            comunicação do Equipamento SAT com a rede local do estabelecimento comercial através do envio de um arquivo de configuração no padrão XML.
            </summary>
            <param name="dadosConfiguracao">Arquivo de configuração no formato XML.</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.ConsultarNumeroSessao(System.Int32)">
            <summary>
            O AC poderá verificar se a última sessão requisitada foi processada em caso de não
            recebimento do retorno da operação.O equipamento SAT-CF-e retornará exatamente o
            resultado da sessão consultada.
            </summary>
            <param name="cNumeroDeSessao">Número de sessão a ser consultado no SAT-CF-e</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.ConsultarSAT">
            <summary>
            Esta função é usada para testes de comunicação entre o AC e o Equipamento SAT.
            Header: char* ConsultarSAT(int numeroSessao);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.ConsultarStatusOperacional">
            <summary>
            Essa função é responsável por verificar a situação de funcionamento do Equipamento SAT
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.DesbloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            desbloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.EnviarDadosVenda(System.String)">
            <summary>
            Esta função faz parte do processo de envio dos dados de venda do AC para o Equipamento SAT.
            </summary>
            <param name="dadosVenda"> refere-se aos dados de venda gerados pelo AC e utilizados para compor o CF-e-SAT. (2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.ExtrairLogs">
            <summary>
            O Aplicativo Comercial poderá extrair os arquivos de registro do Equipamento SAT por meio
            da função ExtrairLogs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.TesteFimAFim(System.String)">
            <summary>
            Esta função consiste em um teste de comunicação entre o AC, o Equipamento SAT e a SEFAZ.
            </summary>
            <param name="dadosVenda">refere-se aos dados de venda fictícios gerados pelo AC e utilizados para compor o CF-e-SAT de teste. (vide 2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.TrocarCodigoDeAtivacao(System.String,System.String,System.String)">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar a troca do código de ativação a qualquer momento.
            </summary>
            <param name="opcao">Refere-se a opção do conteúdo do parâmetro "codigoDeAtivacao", sendo :
            1 - Código de Ativação
            2 - Código de Ativação de Emergência
            </param>
            <param name="novoCodigo">Novo código de ativação escolhido pelo contribuinte</param>
            <param name="confNovoCodigo">Confirmação do novo código de ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.AssociarAssinatura(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço AssociarAssinatura
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJvalue">CNPJ</param>
            <param name="assinaturaCNPJs">Assinatura</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.AtivarSAT(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço AtivarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="subComando">Sub-comando</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJ">CNPJ</param>
            <param name="cUF">UF</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.AtualizarSoftwareSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço AtualizarSoftwareSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.BloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço BloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.CancelarUltimaVenda(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço CancelarUltimaVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="chave">Chave de acesso</param>
            <param name="dadosCancelamento">XML do cancelamento</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.ComunicarCertificadoICPBRASIL(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ComunicarCertificadoICPBRASIL
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="certificado">Cerificado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.ConfigurarInterfaceDeRede(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ConfigurarInterfaceDeRede
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosConfiguracao">XML de Configuração</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.ConsultarNumeroSessao(System.Int32,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarNumeroSessao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="cNumeroDeSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.ConsultarSAT(System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.ConsultarStatusOperacional(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ConsultarStatusOperacional
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.DesbloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço DesbloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.EnviarDadosVenda(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço EnviarDadosVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.ExtrairLogs(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ExtrairLogs
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.TesteFimAFim(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TesteFimAFim
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginSmart.TrocarCodigoDeAtivacao(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TrocarCodigoDeAtivacao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="opcao">Opção</param>
            <param name="novoCodigo">Nova código de ativação</param>
            <param name="confNovoCodigo">Confirmação do código de confirmação</param>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Fabricante.Epson">
            <summary>
            Classe responsável pela comunicação com a DLL Epson
            </summary>
            <summary>
            Classe responsável pela comunicação com a DLL Epson
            </summary>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.#ctor(Unimake.SAT.Enuns.Fabricante,System.String)">
            <summary>
            Construtor
            </summary>
            <param name="fabricante"></param>
            <param name="codigoAtivacao"></param>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.AssociarAssinatura(System.String,System.String)">
            <summary>
            O contribuinte deverá associar a assinatura do Aplicativo Comercial com o SAT através da
            função AssociarAssinatura.
            </summary>
            <param name="CNPJvalue">CNPJ da empresa desenvolvedora do Aplicativo Comercial + CNPJ do Emitente (vide 2.1.3 da Especificação de Requisitos)</param>
            <param name="assinaturaCNPJs">Assinatura digital conjunto "CNPJ Software House" + "CNPJ do estabelecimento comercial". (vide 2.1.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.AtivarSAT(System.Int32,System.String,System.Int32)">
            <summary>
            Esta função faz parte do processo de ativação do Equipamento SAT e será responsável por enviar ao SAT qual o tipo de ativação será efetuada pelo Contribuinte.
            SubComando:
            1  -  Tipo de Certificado = AC-SAT/SEFAZ
            2  -  Tipo de Certificado = ICP-BRASIL
            3  -  Renovação do Certificado ICP-BRASIL
            </summary>
            <param name="subComando">Identificador do tipo de Certificado, descritos na tabela 15</param>
            <param name="CNPJ">CNPJ do contribuinte, somente números</param>
            <param name="cUF">Código do Estado da Federação, segundo tabela do IBGE, onde o SAT será ativado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.AtualizarSoftwareSAT">
            <summary>
            Documentação não encontrada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.BloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            bloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.CancelarUltimaVenda(System.String,System.String)">
            <summary>
            O envio dos dados de cancelamento da venda ocorrerá de acordo com as definições a seguir.
            </summary>
            <param name="chave">Chave de acesso do CF-e-SAT a ser cancelado precedida do literal 'CFe' (vide 4.7 da Especificação de Requisitos)</param>
            <param name="dadosCancelamento">refere-se aos dados da venda gerados pelo AC e utilizados para compor o CF-e-SAT de cancelamento(vide 4.2.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.ConfigurarInterfaceDeRede(System.String)">
            <summary>
            O AC, ou outro software fornecido pelo Fabricante, poderá configurar a interface de
            comunicação do Equipamento SAT com a rede local do estabelecimento comercial através do envio de um arquivo de configuração no padrão XML.
            </summary>
            <param name="dadosConfiguracao">Arquivo de configuração no formato XML.</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.ConsultarNumeroSessao(System.Int32)">
            <summary>
            O AC poderá verificar se a última sessão requisitada foi processada em caso de não
            recebimento do retorno da operação.O equipamento SAT-CF-e retornará exatamente o
            resultado da sessão consultada.
            </summary>
            <param name="cNumeroDeSessao">Número de sessão a ser consultado no SAT-CF-e</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.ConsultarSAT">
            <summary>
            Esta função é usada para testes de comunicação entre o AC e o Equipamento SAT.
            Header: char* ConsultarSAT(int numeroSessao);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.ConsultarStatusOperacional">
            <summary>
            Essa função é responsável por verificar a situação de funcionamento do Equipamento SAT
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.DesbloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            desbloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.EnviarDadosVenda(System.String)">
            <summary>
            Esta função faz parte do processo de envio dos dados de venda do AC para o Equipamento SAT.
            </summary>
            <param name="dadosVenda"> refere-se aos dados de venda gerados pelo AC e utilizados para compor o CF-e-SAT. (2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.ExtrairLogs">
            <summary>
            O Aplicativo Comercial poderá extrair os arquivos de registro do Equipamento SAT por meio
            da função ExtrairLogs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.TesteFimAFim(System.String)">
            <summary>
            Esta função consiste em um teste de comunicação entre o AC, o Equipamento SAT e a SEFAZ.
            </summary>
            <param name="dadosVenda">refere-se aos dados de venda fictícios gerados pelo AC e utilizados para compor o CF-e-SAT de teste. (vide 2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.TrocarCodigoDeAtivacao(System.String,System.String,System.String)">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar a troca do código de ativação a qualquer momento.
            </summary>
            <param name="opcao">Refere-se a opção do conteúdo do parâmetro "codigoDeAtivacao", sendo :
            1 - Código de Ativação
            2 - Código de Ativação de Emergência
            </param>
            <param name="novoCodigo">Novo código de ativação escolhido pelo contribuinte</param>
            <param name="confNovoCodigo">Confirmação do novo código de ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.AssociarAssinatura(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço AssociarAssinatura
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJvalue">CNPJ</param>
            <param name="assinaturaCNPJs">Assinatura</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.AtivarSAT(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço AtivarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="subComando">Sub-comando</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJ">CNPJ</param>
            <param name="cUF">UF</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.AtualizarSoftwareSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço AtualizarSoftwareSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.BloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço BloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.CancelarUltimaVenda(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço CancelarUltimaVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="chave">Chave de acesso</param>
            <param name="dadosCancelamento">XML do cancelamento</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.ComunicarCertificadoICPBRASIL(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ComunicarCertificadoICPBRASIL
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="certificado">Cerificado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.ConfigurarInterfaceDeRede(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ConfigurarInterfaceDeRede
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosConfiguracao">XML de Configuração</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.ConsultarNumeroSessao(System.Int32,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarNumeroSessao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="cNumeroDeSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.ConsultarSAT(System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.ConsultarStatusOperacional(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ConsultarStatusOperacional
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.DesbloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço DesbloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.EnviarDadosVenda(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço EnviarDadosVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.ExtrairLogs(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ExtrairLogs
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.TesteFimAFim(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TesteFimAFim
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Epson.TrocarCodigoDeAtivacao(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TrocarCodigoDeAtivacao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="opcao">Opção</param>
            <param name="novoCodigo">Nova código de ativação</param>
            <param name="confNovoCodigo">Confirmação do código de confirmação</param>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Fabricante.ElginII">
            <summary>
            Classe responsável pela comunicação com a DLL Elgin
            </summary>
            <summary>
            Classe responsável pela comunicação com a DLL Elgin
            </summary>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.#ctor(Unimake.SAT.Enuns.Fabricante,System.String)">
            <summary>
            Construtor
            </summary>
            <param name="fabricante"></param>
            <param name="codigoAtivacao"></param>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.AssociarAssinatura(System.String,System.String)">
            <summary>
            O contribuinte deverá associar a assinatura do Aplicativo Comercial com o SAT através da
            função AssociarAssinatura.
            </summary>
            <param name="CNPJvalue">CNPJ da empresa desenvolvedora do Aplicativo Comercial + CNPJ do Emitente (vide 2.1.3 da Especificação de Requisitos)</param>
            <param name="assinaturaCNPJs">Assinatura digital conjunto "CNPJ Software House" + "CNPJ do estabelecimento comercial". (vide 2.1.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.AtivarSAT(System.Int32,System.String,System.Int32)">
            <summary>
            Esta função faz parte do processo de ativação do Equipamento SAT e será responsável por enviar ao SAT qual o tipo de ativação será efetuada pelo Contribuinte.
            SubComando:
            1  -  Tipo de Certificado = AC-SAT/SEFAZ
            2  -  Tipo de Certificado = ICP-BRASIL
            3  -  Renovação do Certificado ICP-BRASIL
            </summary>
            <param name="subComando">Identificador do tipo de Certificado, descritos na tabela 15</param>
            <param name="CNPJ">CNPJ do contribuinte, somente números</param>
            <param name="cUF">Código do Estado da Federação, segundo tabela do IBGE, onde o SAT será ativado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.AtualizarSoftwareSAT">
            <summary>
            Documentação não encontrada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.BloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            bloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.CancelarUltimaVenda(System.String,System.String)">
            <summary>
            O envio dos dados de cancelamento da venda ocorrerá de acordo com as definições a seguir.
            </summary>
            <param name="chave">Chave de acesso do CF-e-SAT a ser cancelado precedida do literal 'CFe' (vide 4.7 da Especificação de Requisitos)</param>
            <param name="dadosCancelamento">refere-se aos dados da venda gerados pelo AC e utilizados para compor o CF-e-SAT de cancelamento(vide 4.2.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.ConfigurarInterfaceDeRede(System.String)">
            <summary>
            O AC, ou outro software fornecido pelo Fabricante, poderá configurar a interface de
            comunicação do Equipamento SAT com a rede local do estabelecimento comercial através do envio de um arquivo de configuração no padrão XML.
            </summary>
            <param name="dadosConfiguracao">Arquivo de configuração no formato XML.</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.ConsultarNumeroSessao(System.Int32)">
            <summary>
            O AC poderá verificar se a última sessão requisitada foi processada em caso de não
            recebimento do retorno da operação.O equipamento SAT-CF-e retornará exatamente o
            resultado da sessão consultada.
            </summary>
            <param name="cNumeroDeSessao">Número de sessão a ser consultado no SAT-CF-e</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.ConsultarSAT">
            <summary>
            Esta função é usada para testes de comunicação entre o AC e o Equipamento SAT.
            Header: char* ConsultarSAT(int numeroSessao);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.ConsultarStatusOperacional">
            <summary>
            Essa função é responsável por verificar a situação de funcionamento do Equipamento SAT
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.DesbloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            desbloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.EnviarDadosVenda(System.String)">
            <summary>
            Esta função faz parte do processo de envio dos dados de venda do AC para o Equipamento SAT.
            </summary>
            <param name="dadosVenda"> refere-se aos dados de venda gerados pelo AC e utilizados para compor o CF-e-SAT. (2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.ExtrairLogs">
            <summary>
            O Aplicativo Comercial poderá extrair os arquivos de registro do Equipamento SAT por meio
            da função ExtrairLogs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.TesteFimAFim(System.String)">
            <summary>
            Esta função consiste em um teste de comunicação entre o AC, o Equipamento SAT e a SEFAZ.
            </summary>
            <param name="dadosVenda">refere-se aos dados de venda fictícios gerados pelo AC e utilizados para compor o CF-e-SAT de teste. (vide 2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.TrocarCodigoDeAtivacao(System.String,System.String,System.String)">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar a troca do código de ativação a qualquer momento.
            </summary>
            <param name="opcao">Refere-se a opção do conteúdo do parâmetro "codigoDeAtivacao", sendo :
            1 - Código de Ativação
            2 - Código de Ativação de Emergência
            </param>
            <param name="novoCodigo">Novo código de ativação escolhido pelo contribuinte</param>
            <param name="confNovoCodigo">Confirmação do novo código de ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.AssociarAssinatura(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço AssociarAssinatura
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJvalue">CNPJ</param>
            <param name="assinaturaCNPJs">Assinatura</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.AtivarSAT(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço AtivarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="subComando">Sub-comando</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJ">CNPJ</param>
            <param name="cUF">UF</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.AtualizarSoftwareSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço AtualizarSoftwareSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.BloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço BloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.CancelarUltimaVenda(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço CancelarUltimaVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="chave">Chave de acesso</param>
            <param name="dadosCancelamento">XML do cancelamento</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.ComunicarCertificadoICPBRASIL(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ComunicarCertificadoICPBRASIL
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="certificado">Cerificado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.ConfigurarInterfaceDeRede(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ConfigurarInterfaceDeRede
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosConfiguracao">XML de Configuração</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.ConsultarNumeroSessao(System.Int32,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarNumeroSessao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="cNumeroDeSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.ConsultarSAT(System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.ConsultarStatusOperacional(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ConsultarStatusOperacional
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.DesbloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço DesbloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.EnviarDadosVenda(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço EnviarDadosVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.ExtrairLogs(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ExtrairLogs
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.TesteFimAFim(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TesteFimAFim
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.ElginII.TrocarCodigoDeAtivacao(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TrocarCodigoDeAtivacao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="opcao">Opção</param>
            <param name="novoCodigo">Nova código de ativação</param>
            <param name="confNovoCodigo">Confirmação do código de confirmação</param>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Fabricante.Jetway">
            <summary>
            Classe responsável pela comunicação com a DLL Jetway
            </summary>
            <summary>
            Classe responsável pela comunicação com a DLL Jetway
            </summary>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.#ctor(Unimake.SAT.Enuns.Fabricante,System.String)">
            <summary>
            Construtor
            </summary>
            <param name="fabricante"></param>
            <param name="codigoAtivacao"></param>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.AssociarAssinatura(System.String,System.String)">
            <summary>
            O contribuinte deverá associar a assinatura do Aplicativo Comercial com o SAT através da
            função AssociarAssinatura.
            </summary>
            <param name="CNPJvalue">CNPJ da empresa desenvolvedora do Aplicativo Comercial + CNPJ do Emitente (vide 2.1.3 da Especificação de Requisitos)</param>
            <param name="assinaturaCNPJs">Assinatura digital conjunto "CNPJ Software House" + "CNPJ do estabelecimento comercial". (vide 2.1.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.AtivarSAT(System.Int32,System.String,System.Int32)">
            <summary>
            Esta função faz parte do processo de ativação do Equipamento SAT e será responsável por enviar ao SAT qual o tipo de ativação será efetuada pelo Contribuinte.
            SubComando:
            1  -  Tipo de Certificado = AC-SAT/SEFAZ
            2  -  Tipo de Certificado = ICP-BRASIL
            3  -  Renovação do Certificado ICP-BRASIL
            </summary>
            <param name="subComando">Identificador do tipo de Certificado, descritos na tabela 15</param>
            <param name="CNPJ">CNPJ do contribuinte, somente números</param>
            <param name="cUF">Código do Estado da Federação, segundo tabela do IBGE, onde o SAT será ativado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.AtualizarSoftwareSAT">
            <summary>
            Documentação não encontrada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.BloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            bloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.CancelarUltimaVenda(System.String,System.String)">
            <summary>
            O envio dos dados de cancelamento da venda ocorrerá de acordo com as definições a seguir.
            </summary>
            <param name="chave">Chave de acesso do CF-e-SAT a ser cancelado precedida do literal 'CFe' (vide 4.7 da Especificação de Requisitos)</param>
            <param name="dadosCancelamento">refere-se aos dados da venda gerados pelo AC e utilizados para compor o CF-e-SAT de cancelamento(vide 4.2.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.ConfigurarInterfaceDeRede(System.String)">
            <summary>
            O AC, ou outro software fornecido pelo Fabricante, poderá configurar a interface de
            comunicação do Equipamento SAT com a rede local do estabelecimento comercial através do envio de um arquivo de configuração no padrão XML.
            </summary>
            <param name="dadosConfiguracao">Arquivo de configuração no formato XML.</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.ConsultarNumeroSessao(System.Int32)">
            <summary>
            O AC poderá verificar se a última sessão requisitada foi processada em caso de não
            recebimento do retorno da operação.O equipamento SAT-CF-e retornará exatamente o
            resultado da sessão consultada.
            </summary>
            <param name="cNumeroDeSessao">Número de sessão a ser consultado no SAT-CF-e</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.ConsultarSAT">
            <summary>
            Esta função é usada para testes de comunicação entre o AC e o Equipamento SAT.
            Header: char* ConsultarSAT(int numeroSessao);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.ConsultarStatusOperacional">
            <summary>
            Essa função é responsável por verificar a situação de funcionamento do Equipamento SAT
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.DesbloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            desbloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.EnviarDadosVenda(System.String)">
            <summary>
            Esta função faz parte do processo de envio dos dados de venda do AC para o Equipamento SAT.
            </summary>
            <param name="dadosVenda"> refere-se aos dados de venda gerados pelo AC e utilizados para compor o CF-e-SAT. (2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.ExtrairLogs">
            <summary>
            O Aplicativo Comercial poderá extrair os arquivos de registro do Equipamento SAT por meio
            da função ExtrairLogs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.TesteFimAFim(System.String)">
            <summary>
            Esta função consiste em um teste de comunicação entre o AC, o Equipamento SAT e a SEFAZ.
            </summary>
            <param name="dadosVenda">refere-se aos dados de venda fictícios gerados pelo AC e utilizados para compor o CF-e-SAT de teste. (vide 2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.TrocarCodigoDeAtivacao(System.String,System.String,System.String)">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar a troca do código de ativação a qualquer momento.
            </summary>
            <param name="opcao">Refere-se a opção do conteúdo do parâmetro "codigoDeAtivacao", sendo :
            1 - Código de Ativação
            2 - Código de Ativação de Emergência
            </param>
            <param name="novoCodigo">Novo código de ativação escolhido pelo contribuinte</param>
            <param name="confNovoCodigo">Confirmação do novo código de ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.AssociarAssinatura(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço AssociarAssinatura
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJvalue">CNPJ</param>
            <param name="assinaturaCNPJs">Assinatura</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.AtivarSAT(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço AtivarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="subComando">Sub-comando</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJ">CNPJ</param>
            <param name="cUF">UF</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.AtualizarSoftwareSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço AtualizarSoftwareSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.BloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço BloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.CancelarUltimaVenda(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço CancelarUltimaVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="chave">Chave de acesso</param>
            <param name="dadosCancelamento">XML do cancelamento</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.ComunicarCertificadoICPBRASIL(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ComunicarCertificadoICPBRASIL
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="certificado">Cerificado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.ConfigurarInterfaceDeRede(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ConfigurarInterfaceDeRede
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosConfiguracao">XML de Configuração</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.ConsultarNumeroSessao(System.Int32,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarNumeroSessao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="cNumeroDeSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.ConsultarSAT(System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.ConsultarStatusOperacional(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ConsultarStatusOperacional
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.DesbloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço DesbloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.EnviarDadosVenda(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço EnviarDadosVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.ExtrairLogs(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ExtrairLogs
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.TesteFimAFim(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TesteFimAFim
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Jetway.TrocarCodigoDeAtivacao(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TrocarCodigoDeAtivacao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="opcao">Opção</param>
            <param name="novoCodigo">Nova código de ativação</param>
            <param name="confNovoCodigo">Confirmação do código de confirmação</param>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Fabricante.Kryptus">
            <summary>
            Classe responsável pela comunicação com a DLL Kryptus
            </summary>
            <summary>
            Classe responsável pela comunicação com a DLL Kryptus
            </summary>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.#ctor(Unimake.SAT.Enuns.Fabricante,System.String)">
            <summary>
            Construtor
            </summary>
            <param name="fabricante"></param>
            <param name="codigoAtivacao"></param>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.AssociarAssinatura(System.String,System.String)">
            <summary>
            O contribuinte deverá associar a assinatura do Aplicativo Comercial com o SAT através da
            função AssociarAssinatura.
            </summary>
            <param name="CNPJvalue">CNPJ da empresa desenvolvedora do Aplicativo Comercial + CNPJ do Emitente (vide 2.1.3 da Especificação de Requisitos)</param>
            <param name="assinaturaCNPJs">Assinatura digital conjunto "CNPJ Software House" + "CNPJ do estabelecimento comercial". (vide 2.1.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.AtivarSAT(System.Int32,System.String,System.Int32)">
            <summary>
            Esta função faz parte do processo de ativação do Equipamento SAT e será responsável por enviar ao SAT qual o tipo de ativação será efetuada pelo Contribuinte.
            SubComando:
            1  -  Tipo de Certificado = AC-SAT/SEFAZ
            2  -  Tipo de Certificado = ICP-BRASIL
            3  -  Renovação do Certificado ICP-BRASIL
            </summary>
            <param name="subComando">Identificador do tipo de Certificado, descritos na tabela 15</param>
            <param name="CNPJ">CNPJ do contribuinte, somente números</param>
            <param name="cUF">Código do Estado da Federação, segundo tabela do IBGE, onde o SAT será ativado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.AtualizarSoftwareSAT">
            <summary>
            Documentação não encontrada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.BloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            bloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.CancelarUltimaVenda(System.String,System.String)">
            <summary>
            O envio dos dados de cancelamento da venda ocorrerá de acordo com as definições a seguir.
            </summary>
            <param name="chave">Chave de acesso do CF-e-SAT a ser cancelado precedida do literal 'CFe' (vide 4.7 da Especificação de Requisitos)</param>
            <param name="dadosCancelamento">refere-se aos dados da venda gerados pelo AC e utilizados para compor o CF-e-SAT de cancelamento(vide 4.2.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.ConfigurarInterfaceDeRede(System.String)">
            <summary>
            O AC, ou outro software fornecido pelo Fabricante, poderá configurar a interface de
            comunicação do Equipamento SAT com a rede local do estabelecimento comercial através do envio de um arquivo de configuração no padrão XML.
            </summary>
            <param name="dadosConfiguracao">Arquivo de configuração no formato XML.</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.ConsultarNumeroSessao(System.Int32)">
            <summary>
            O AC poderá verificar se a última sessão requisitada foi processada em caso de não
            recebimento do retorno da operação.O equipamento SAT-CF-e retornará exatamente o
            resultado da sessão consultada.
            </summary>
            <param name="cNumeroDeSessao">Número de sessão a ser consultado no SAT-CF-e</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.ConsultarSAT">
            <summary>
            Esta função é usada para testes de comunicação entre o AC e o Equipamento SAT.
            Header: char* ConsultarSAT(int numeroSessao);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.ConsultarStatusOperacional">
            <summary>
            Essa função é responsável por verificar a situação de funcionamento do Equipamento SAT
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.DesbloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            desbloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.EnviarDadosVenda(System.String)">
            <summary>
            Esta função faz parte do processo de envio dos dados de venda do AC para o Equipamento SAT.
            </summary>
            <param name="dadosVenda"> refere-se aos dados de venda gerados pelo AC e utilizados para compor o CF-e-SAT. (2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.ExtrairLogs">
            <summary>
            O Aplicativo Comercial poderá extrair os arquivos de registro do Equipamento SAT por meio
            da função ExtrairLogs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.TesteFimAFim(System.String)">
            <summary>
            Esta função consiste em um teste de comunicação entre o AC, o Equipamento SAT e a SEFAZ.
            </summary>
            <param name="dadosVenda">refere-se aos dados de venda fictícios gerados pelo AC e utilizados para compor o CF-e-SAT de teste. (vide 2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.TrocarCodigoDeAtivacao(System.String,System.String,System.String)">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar a troca do código de ativação a qualquer momento.
            </summary>
            <param name="opcao">Refere-se a opção do conteúdo do parâmetro "codigoDeAtivacao", sendo :
            1 - Código de Ativação
            2 - Código de Ativação de Emergência
            </param>
            <param name="novoCodigo">Novo código de ativação escolhido pelo contribuinte</param>
            <param name="confNovoCodigo">Confirmação do novo código de ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.AssociarAssinatura(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço AssociarAssinatura
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJvalue">CNPJ</param>
            <param name="assinaturaCNPJs">Assinatura</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.AtivarSAT(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço AtivarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="subComando">Sub-comando</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJ">CNPJ</param>
            <param name="cUF">UF</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.AtualizarSoftwareSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço AtualizarSoftwareSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.BloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço BloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.CancelarUltimaVenda(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço CancelarUltimaVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="chave">Chave de acesso</param>
            <param name="dadosCancelamento">XML do cancelamento</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.ComunicarCertificadoICPBRASIL(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ComunicarCertificadoICPBRASIL
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="certificado">Cerificado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.ConfigurarInterfaceDeRede(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ConfigurarInterfaceDeRede
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosConfiguracao">XML de Configuração</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.ConsultarNumeroSessao(System.Int32,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarNumeroSessao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="cNumeroDeSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.ConsultarSAT(System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.ConsultarStatusOperacional(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ConsultarStatusOperacional
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.DesbloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço DesbloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.EnviarDadosVenda(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço EnviarDadosVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.ExtrairLogs(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ExtrairLogs
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.TesteFimAFim(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TesteFimAFim
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Kryptus.TrocarCodigoDeAtivacao(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TrocarCodigoDeAtivacao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="opcao">Opção</param>
            <param name="novoCodigo">Nova código de ativação</param>
            <param name="confNovoCodigo">Confirmação do código de confirmação</param>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Fabricante.Sweda">
            <summary>
            Classe responsável pela comunicação com a DLL Bematech
            </summary>
            <summary>
            Classe responsável pela comunicação com a DLL Sweda
            </summary>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.#ctor(Unimake.SAT.Enuns.Fabricante,System.String)">
            <summary>
            Construtor
            </summary>
            <param name="fabricante"></param>
            <param name="codigoAtivacao"></param>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.AssociarAssinatura(System.String,System.String)">
            <summary>
            O contribuinte deverá associar a assinatura do Aplicativo Comercial com o SAT através da
            função AssociarAssinatura.
            </summary>
            <param name="CNPJvalue">CNPJ da empresa desenvolvedora do Aplicativo Comercial + CNPJ do Emitente (vide 2.1.3 da Especificação de Requisitos)</param>
            <param name="assinaturaCNPJs">Assinatura digital conjunto "CNPJ Software House" + "CNPJ do estabelecimento comercial". (vide 2.1.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.AtivarSAT(System.Int32,System.String,System.Int32)">
            <summary>
            Esta função faz parte do processo de ativação do Equipamento SAT e será responsável por enviar ao SAT qual o tipo de ativação será efetuada pelo Contribuinte.
            SubComando:
            1  -  Tipo de Certificado = AC-SAT/SEFAZ
            2  -  Tipo de Certificado = ICP-BRASIL
            3  -  Renovação do Certificado ICP-BRASIL
            </summary>
            <param name="subComando">Identificador do tipo de Certificado, descritos na tabela 15</param>
            <param name="CNPJ">CNPJ do contribuinte, somente números</param>
            <param name="cUF">Código do Estado da Federação, segundo tabela do IBGE, onde o SAT será ativado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.AtualizarSoftwareSAT">
            <summary>
            Documentação não encontrada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.BloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            bloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.CancelarUltimaVenda(System.String,System.String)">
            <summary>
            O envio dos dados de cancelamento da venda ocorrerá de acordo com as definições a seguir.
            </summary>
            <param name="chave">Chave de acesso do CF-e-SAT a ser cancelado precedida do literal 'CFe' (vide 4.7 da Especificação de Requisitos)</param>
            <param name="dadosCancelamento">refere-se aos dados da venda gerados pelo AC e utilizados para compor o CF-e-SAT de cancelamento(vide 4.2.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.ConfigurarInterfaceDeRede(System.String)">
            <summary>
            O AC, ou outro software fornecido pelo Fabricante, poderá configurar a interface de
            comunicação do Equipamento SAT com a rede local do estabelecimento comercial através do envio de um arquivo de configuração no padrão XML.
            </summary>
            <param name="dadosConfiguracao">Arquivo de configuração no formato XML.</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.ConsultarNumeroSessao(System.Int32)">
            <summary>
            O AC poderá verificar se a última sessão requisitada foi processada em caso de não
            recebimento do retorno da operação.O equipamento SAT-CF-e retornará exatamente o
            resultado da sessão consultada.
            </summary>
            <param name="cNumeroDeSessao">Número de sessão a ser consultado no SAT-CF-e</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.ConsultarSAT">
            <summary>
            Esta função é usada para testes de comunicação entre o AC e o Equipamento SAT.
            Header: char* ConsultarSAT(int numeroSessao);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.ConsultarStatusOperacional">
            <summary>
            Essa função é responsável por verificar a situação de funcionamento do Equipamento SAT
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.DesbloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            desbloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.EnviarDadosVenda(System.String)">
            <summary>
            Esta função faz parte do processo de envio dos dados de venda do AC para o Equipamento SAT.
            </summary>
            <param name="dadosVenda"> refere-se aos dados de venda gerados pelo AC e utilizados para compor o CF-e-SAT. (2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.ExtrairLogs">
            <summary>
            O Aplicativo Comercial poderá extrair os arquivos de registro do Equipamento SAT por meio
            da função ExtrairLogs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.TesteFimAFim(System.String)">
            <summary>
            Esta função consiste em um teste de comunicação entre o AC, o Equipamento SAT e a SEFAZ.
            </summary>
            <param name="dadosVenda">refere-se aos dados de venda fictícios gerados pelo AC e utilizados para compor o CF-e-SAT de teste. (vide 2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.TrocarCodigoDeAtivacao(System.String,System.String,System.String)">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar a troca do código de ativação a qualquer momento.
            </summary>
            <param name="opcao">Refere-se a opção do conteúdo do parâmetro "codigoDeAtivacao", sendo :
            1 - Código de Ativação
            2 - Código de Ativação de Emergência
            </param>
            <param name="novoCodigo">Novo código de ativação escolhido pelo contribuinte</param>
            <param name="confNovoCodigo">Confirmação do novo código de ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.AssociarAssinatura(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço AssociarAssinatura
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJvalue">CNPJ</param>
            <param name="assinaturaCNPJs">Assinatura</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.AtivarSAT(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço AtivarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="subComando">Sub-comando</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJ">CNPJ</param>
            <param name="cUF">UF</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.AtualizarSoftwareSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço AtualizarSoftwareSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.BloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço BloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.CancelarUltimaVenda(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço CancelarUltimaVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="chave">Chave de acesso</param>
            <param name="dadosCancelamento">XML do cancelamento</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.ComunicarCertificadoICPBRASIL(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ComunicarCertificadoICPBRASIL
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="certificado">Cerificado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.ConfigurarInterfaceDeRede(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ConfigurarInterfaceDeRede
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosConfiguracao">XML de Configuração</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.ConsultarNumeroSessao(System.Int32,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarNumeroSessao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="cNumeroDeSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.ConsultarSAT(System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.ConsultarStatusOperacional(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ConsultarStatusOperacional
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.DesbloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço DesbloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.EnviarDadosVenda(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço EnviarDadosVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.ExtrairLogs(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ExtrairLogs
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.TesteFimAFim(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TesteFimAFim
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Sweda.TrocarCodigoDeAtivacao(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TrocarCodigoDeAtivacao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="opcao">Opção</param>
            <param name="novoCodigo">Nova código de ativação</param>
            <param name="confNovoCodigo">Confirmação do código de confirmação</param>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Fabricante.Nitere">
            <summary>
            Classe responsável pela comunicação com a DLL Nitere
            </summary>
            <summary>
            Classe responsável pela comunicação com a DLL Nitere
            </summary>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.#ctor(Unimake.SAT.Enuns.Fabricante,System.String)">
            <summary>
            Construtor
            </summary>
            <param name="fabricante"></param>
            <param name="codigoAtivacao"></param>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.AssociarAssinatura(System.String,System.String)">
            <summary>
            O contribuinte deverá associar a assinatura do Aplicativo Comercial com o SAT através da
            função AssociarAssinatura.
            </summary>
            <param name="CNPJvalue">CNPJ da empresa desenvolvedora do Aplicativo Comercial + CNPJ do Emitente (vide 2.1.3 da Especificação de Requisitos)</param>
            <param name="assinaturaCNPJs">Assinatura digital conjunto "CNPJ Software House" + "CNPJ do estabelecimento comercial". (vide 2.1.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.AtivarSAT(System.Int32,System.String,System.Int32)">
            <summary>
            Esta função faz parte do processo de ativação do Equipamento SAT e será responsável por enviar ao SAT qual o tipo de ativação será efetuada pelo Contribuinte.
            SubComando:
            1  -  Tipo de Certificado = AC-SAT/SEFAZ
            2  -  Tipo de Certificado = ICP-BRASIL
            3  -  Renovação do Certificado ICP-BRASIL
            </summary>
            <param name="subComando">Identificador do tipo de Certificado, descritos na tabela 15</param>
            <param name="CNPJ">CNPJ do contribuinte, somente números</param>
            <param name="cUF">Código do Estado da Federação, segundo tabela do IBGE, onde o SAT será ativado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.AtualizarSoftwareSAT">
            <summary>
            Documentação não encontrada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.BloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            bloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.CancelarUltimaVenda(System.String,System.String)">
            <summary>
            O envio dos dados de cancelamento da venda ocorrerá de acordo com as definições a seguir.
            </summary>
            <param name="chave">Chave de acesso do CF-e-SAT a ser cancelado precedida do literal 'CFe' (vide 4.7 da Especificação de Requisitos)</param>
            <param name="dadosCancelamento">refere-se aos dados da venda gerados pelo AC e utilizados para compor o CF-e-SAT de cancelamento(vide 4.2.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.ConfigurarInterfaceDeRede(System.String)">
            <summary>
            O AC, ou outro software fornecido pelo Fabricante, poderá configurar a interface de
            comunicação do Equipamento SAT com a rede local do estabelecimento comercial através do envio de um arquivo de configuração no padrão XML.
            </summary>
            <param name="dadosConfiguracao">Arquivo de configuração no formato XML.</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.ConsultarNumeroSessao(System.Int32)">
            <summary>
            O AC poderá verificar se a última sessão requisitada foi processada em caso de não
            recebimento do retorno da operação.O equipamento SAT-CF-e retornará exatamente o
            resultado da sessão consultada.
            </summary>
            <param name="cNumeroDeSessao">Número de sessão a ser consultado no SAT-CF-e</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.ConsultarSAT">
            <summary>
            Esta função é usada para testes de comunicação entre o AC e o Equipamento SAT.
            Header: char* ConsultarSAT(int numeroSessao);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.ConsultarStatusOperacional">
            <summary>
            Essa função é responsável por verificar a situação de funcionamento do Equipamento SAT
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.DesbloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            desbloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.EnviarDadosVenda(System.String)">
            <summary>
            Esta função faz parte do processo de envio dos dados de venda do AC para o Equipamento SAT.
            </summary>
            <param name="dadosVenda"> refere-se aos dados de venda gerados pelo AC e utilizados para compor o CF-e-SAT. (2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.ExtrairLogs">
            <summary>
            O Aplicativo Comercial poderá extrair os arquivos de registro do Equipamento SAT por meio
            da função ExtrairLogs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.TesteFimAFim(System.String)">
            <summary>
            Esta função consiste em um teste de comunicação entre o AC, o Equipamento SAT e a SEFAZ.
            </summary>
            <param name="dadosVenda">refere-se aos dados de venda fictícios gerados pelo AC e utilizados para compor o CF-e-SAT de teste. (vide 2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.TrocarCodigoDeAtivacao(System.String,System.String,System.String)">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar a troca do código de ativação a qualquer momento.
            </summary>
            <param name="opcao">Refere-se a opção do conteúdo do parâmetro "codigoDeAtivacao", sendo :
            1 - Código de Ativação
            2 - Código de Ativação de Emergência
            </param>
            <param name="novoCodigo">Novo código de ativação escolhido pelo contribuinte</param>
            <param name="confNovoCodigo">Confirmação do novo código de ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.AssociarAssinatura(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço AssociarAssinatura
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJvalue">CNPJ</param>
            <param name="assinaturaCNPJs">Assinatura</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.AtivarSAT(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço AtivarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="subComando">Sub-comando</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJ">CNPJ</param>
            <param name="cUF">UF</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.AtualizarSoftwareSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço AtualizarSoftwareSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.BloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço BloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.CancelarUltimaVenda(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço CancelarUltimaVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="chave">Chave de acesso</param>
            <param name="dadosCancelamento">XML do cancelamento</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.ComunicarCertificadoICPBRASIL(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ComunicarCertificadoICPBRASIL
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="certificado">Cerificado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.ConfigurarInterfaceDeRede(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ConfigurarInterfaceDeRede
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosConfiguracao">XML de Configuração</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.ConsultarNumeroSessao(System.Int32,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarNumeroSessao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="cNumeroDeSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.ConsultarSAT(System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.ConsultarStatusOperacional(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ConsultarStatusOperacional
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.DesbloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço DesbloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.EnviarDadosVenda(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço EnviarDadosVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.ExtrairLogs(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ExtrairLogs
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.TesteFimAFim(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TesteFimAFim
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Nitere.TrocarCodigoDeAtivacao(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TrocarCodigoDeAtivacao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="opcao">Opção</param>
            <param name="novoCodigo">Nova código de ativação</param>
            <param name="confNovoCodigo">Confirmação do código de confirmação</param>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Fabricante.Bematech">
            <summary>
            Classe responsável pela comunicação com a DLL Bematech
            </summary>
            <summary>
            Classe responsável pela comunicação com a DLL Bematech
            </summary>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.#ctor(Unimake.SAT.Enuns.Fabricante,System.String)">
            <summary>
            Construtor
            </summary>
            <param name="fabricante"></param>
            <param name="codigoAtivacao"></param>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.AssociarAssinatura(System.String,System.String)">
            <summary>
            O contribuinte deverá associar a assinatura do Aplicativo Comercial com o SAT através da
            função AssociarAssinatura.
            </summary>
            <param name="CNPJvalue">CNPJ da empresa desenvolvedora do Aplicativo Comercial + CNPJ do Emitente (vide 2.1.3 da Especificação de Requisitos)</param>
            <param name="assinaturaCNPJs">Assinatura digital conjunto "CNPJ Software House" + "CNPJ do estabelecimento comercial". (vide 2.1.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.AtivarSAT(System.Int32,System.String,System.Int32)">
            <summary>
            Esta função faz parte do processo de ativação do Equipamento SAT e será responsável por enviar ao SAT qual o tipo de ativação será efetuada pelo Contribuinte.
            SubComando:
            1  -  Tipo de Certificado = AC-SAT/SEFAZ
            2  -  Tipo de Certificado = ICP-BRASIL
            3  -  Renovação do Certificado ICP-BRASIL
            </summary>
            <param name="subComando">Identificador do tipo de Certificado, descritos na tabela 15</param>
            <param name="CNPJ">CNPJ do contribuinte, somente números</param>
            <param name="cUF">Código do Estado da Federação, segundo tabela do IBGE, onde o SAT será ativado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.AtualizarSoftwareSAT">
            <summary>
            Documentação não encontrada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.BloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            bloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.CancelarUltimaVenda(System.String,System.String)">
            <summary>
            O envio dos dados de cancelamento da venda ocorrerá de acordo com as definições a seguir.
            </summary>
            <param name="chave">Chave de acesso do CF-e-SAT a ser cancelado precedida do literal 'CFe' (vide 4.7 da Especificação de Requisitos)</param>
            <param name="dadosCancelamento">refere-se aos dados da venda gerados pelo AC e utilizados para compor o CF-e-SAT de cancelamento(vide 4.2.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.ConfigurarInterfaceDeRede(System.String)">
            <summary>
            O AC, ou outro software fornecido pelo Fabricante, poderá configurar a interface de
            comunicação do Equipamento SAT com a rede local do estabelecimento comercial através do envio de um arquivo de configuração no padrão XML.
            </summary>
            <param name="dadosConfiguracao">Arquivo de configuração no formato XML.</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.ConsultarNumeroSessao(System.Int32)">
            <summary>
            O AC poderá verificar se a última sessão requisitada foi processada em caso de não
            recebimento do retorno da operação.O equipamento SAT-CF-e retornará exatamente o
            resultado da sessão consultada.
            </summary>
            <param name="cNumeroDeSessao">Número de sessão a ser consultado no SAT-CF-e</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.ConsultarSAT">
            <summary>
            Esta função é usada para testes de comunicação entre o AC e o Equipamento SAT.
            Header: char* ConsultarSAT(int numeroSessao);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.ConsultarStatusOperacional">
            <summary>
            Essa função é responsável por verificar a situação de funcionamento do Equipamento SAT
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.DesbloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            desbloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.EnviarDadosVenda(System.String)">
            <summary>
            Esta função faz parte do processo de envio dos dados de venda do AC para o Equipamento SAT.
            </summary>
            <param name="dadosVenda"> refere-se aos dados de venda gerados pelo AC e utilizados para compor o CF-e-SAT. (2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.ExtrairLogs">
            <summary>
            O Aplicativo Comercial poderá extrair os arquivos de registro do Equipamento SAT por meio
            da função ExtrairLogs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.TesteFimAFim(System.String)">
            <summary>
            Esta função consiste em um teste de comunicação entre o AC, o Equipamento SAT e a SEFAZ.
            </summary>
            <param name="dadosVenda">refere-se aos dados de venda fictícios gerados pelo AC e utilizados para compor o CF-e-SAT de teste. (vide 2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.TrocarCodigoDeAtivacao(System.String,System.String,System.String)">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar a troca do código de ativação a qualquer momento.
            </summary>
            <param name="opcao">Refere-se a opção do conteúdo do parâmetro "codigoDeAtivacao", sendo :
            1 - Código de Ativação
            2 - Código de Ativação de Emergência
            </param>
            <param name="novoCodigo">Novo código de ativação escolhido pelo contribuinte</param>
            <param name="confNovoCodigo">Confirmação do novo código de ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.AssociarAssinatura(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço AssociarAssinatura
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJvalue">CNPJ</param>
            <param name="assinaturaCNPJs">Assinatura</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.AtivarSAT(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço AtivarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="subComando">Sub-comando</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJ">CNPJ</param>
            <param name="cUF">UF</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.AtualizarSoftwareSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço AtualizarSoftwareSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.BloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço BloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.CancelarUltimaVenda(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço CancelarUltimaVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="chave">Chave de acesso</param>
            <param name="dadosCancelamento">XML do cancelamento</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.ComunicarCertificadoICPBRASIL(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ComunicarCertificadoICPBRASIL
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="certificado">Cerificado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.ConfigurarInterfaceDeRede(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ConfigurarInterfaceDeRede
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosConfiguracao">XML de Configuração</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.ConsultarNumeroSessao(System.Int32,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarNumeroSessao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="cNumeroDeSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.ConsultarSAT(System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.ConsultarStatusOperacional(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ConsultarStatusOperacional
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.DesbloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço DesbloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.EnviarDadosVenda(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço EnviarDadosVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.ExtrairLogs(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ExtrairLogs
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.TesteFimAFim(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TesteFimAFim
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Bematech.TrocarCodigoDeAtivacao(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TrocarCodigoDeAtivacao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="opcao">Opção</param>
            <param name="novoCodigo">Nova código de ativação</param>
            <param name="confNovoCodigo">Confirmação do código de confirmação</param>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Fabricante.Elgin">
            <summary>
            Classe responsável pela comunicação com a DLL Elgin
            </summary>
            <summary>
            Classe responsável pela comunicação com a DLL Elgin
            </summary>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.#ctor(Unimake.SAT.Enuns.Fabricante,System.String)">
            <summary>
            Construtor
            </summary>
            <param name="fabricante"></param>
            <param name="codigoAtivacao"></param>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.AssociarAssinatura(System.String,System.String)">
            <summary>
            O contribuinte deverá associar a assinatura do Aplicativo Comercial com o SAT através da
            função AssociarAssinatura.
            </summary>
            <param name="CNPJvalue">CNPJ da empresa desenvolvedora do Aplicativo Comercial + CNPJ do Emitente (vide 2.1.3 da Especificação de Requisitos)</param>
            <param name="assinaturaCNPJs">Assinatura digital conjunto "CNPJ Software House" + "CNPJ do estabelecimento comercial". (vide 2.1.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.AtivarSAT(System.Int32,System.String,System.Int32)">
            <summary>
            Esta função faz parte do processo de ativação do Equipamento SAT e será responsável por enviar ao SAT qual o tipo de ativação será efetuada pelo Contribuinte.
            SubComando:
            1  -  Tipo de Certificado = AC-SAT/SEFAZ
            2  -  Tipo de Certificado = ICP-BRASIL
            3  -  Renovação do Certificado ICP-BRASIL
            </summary>
            <param name="subComando">Identificador do tipo de Certificado, descritos na tabela 15</param>
            <param name="CNPJ">CNPJ do contribuinte, somente números</param>
            <param name="cUF">Código do Estado da Federação, segundo tabela do IBGE, onde o SAT será ativado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.AtualizarSoftwareSAT">
            <summary>
            Documentação não encontrada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.BloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            bloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.CancelarUltimaVenda(System.String,System.String)">
            <summary>
            O envio dos dados de cancelamento da venda ocorrerá de acordo com as definições a seguir.
            </summary>
            <param name="chave">Chave de acesso do CF-e-SAT a ser cancelado precedida do literal 'CFe' (vide 4.7 da Especificação de Requisitos)</param>
            <param name="dadosCancelamento">refere-se aos dados da venda gerados pelo AC e utilizados para compor o CF-e-SAT de cancelamento(vide 4.2.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.ConfigurarInterfaceDeRede(System.String)">
            <summary>
            O AC, ou outro software fornecido pelo Fabricante, poderá configurar a interface de
            comunicação do Equipamento SAT com a rede local do estabelecimento comercial através do envio de um arquivo de configuração no padrão XML.
            </summary>
            <param name="dadosConfiguracao">Arquivo de configuração no formato XML.</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.ConsultarNumeroSessao(System.Int32)">
            <summary>
            O AC poderá verificar se a última sessão requisitada foi processada em caso de não
            recebimento do retorno da operação.O equipamento SAT-CF-e retornará exatamente o
            resultado da sessão consultada.
            </summary>
            <param name="cNumeroDeSessao">Número de sessão a ser consultado no SAT-CF-e</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.ConsultarSAT">
            <summary>
            Esta função é usada para testes de comunicação entre o AC e o Equipamento SAT.
            Header: char* ConsultarSAT(int numeroSessao);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.ConsultarStatusOperacional">
            <summary>
            Essa função é responsável por verificar a situação de funcionamento do Equipamento SAT
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.DesbloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            desbloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.EnviarDadosVenda(System.String)">
            <summary>
            Esta função faz parte do processo de envio dos dados de venda do AC para o Equipamento SAT.
            </summary>
            <param name="dadosVenda"> refere-se aos dados de venda gerados pelo AC e utilizados para compor o CF-e-SAT. (2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.ExtrairLogs">
            <summary>
            O Aplicativo Comercial poderá extrair os arquivos de registro do Equipamento SAT por meio
            da função ExtrairLogs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.TesteFimAFim(System.String)">
            <summary>
            Esta função consiste em um teste de comunicação entre o AC, o Equipamento SAT e a SEFAZ.
            </summary>
            <param name="dadosVenda">refere-se aos dados de venda fictícios gerados pelo AC e utilizados para compor o CF-e-SAT de teste. (vide 2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.TrocarCodigoDeAtivacao(System.String,System.String,System.String)">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar a troca do código de ativação a qualquer momento.
            </summary>
            <param name="opcao">Refere-se a opção do conteúdo do parâmetro "codigoDeAtivacao", sendo :
            1 - Código de Ativação
            2 - Código de Ativação de Emergência
            </param>
            <param name="novoCodigo">Novo código de ativação escolhido pelo contribuinte</param>
            <param name="confNovoCodigo">Confirmação do novo código de ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.AssociarAssinatura(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço AssociarAssinatura
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJvalue">CNPJ</param>
            <param name="assinaturaCNPJs">Assinatura</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.AtivarSAT(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço AtivarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="subComando">Sub-comando</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJ">CNPJ</param>
            <param name="cUF">UF</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.AtualizarSoftwareSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço AtualizarSoftwareSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.BloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço BloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.CancelarUltimaVenda(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço CancelarUltimaVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="chave">Chave de acesso</param>
            <param name="dadosCancelamento">XML do cancelamento</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.ComunicarCertificadoICPBRASIL(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ComunicarCertificadoICPBRASIL
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="certificado">Cerificado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.ConfigurarInterfaceDeRede(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ConfigurarInterfaceDeRede
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosConfiguracao">XML de Configuração</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.ConsultarNumeroSessao(System.Int32,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarNumeroSessao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="cNumeroDeSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.ConsultarSAT(System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.ConsultarStatusOperacional(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ConsultarStatusOperacional
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.DesbloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço DesbloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.EnviarDadosVenda(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço EnviarDadosVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.ExtrairLogs(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ExtrairLogs
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.TesteFimAFim(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TesteFimAFim
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Elgin.TrocarCodigoDeAtivacao(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TrocarCodigoDeAtivacao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="opcao">Opção</param>
            <param name="novoCodigo">Nova código de ativação</param>
            <param name="confNovoCodigo">Confirmação do código de confirmação</param>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Fabricante.Dimep">
            <summary>
            Classe responsável pela comunicação com a DLL Dimep
            </summary>
            <summary>
            Classe responsável pela comunicação com a DLL Dimep
            </summary>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.#ctor(Unimake.SAT.Enuns.Fabricante,System.String)">
            <summary>
            Construtor
            </summary>
            <param name="fabricante"></param>
            <param name="codigoAtivacao"></param>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.AssociarAssinatura(System.String,System.String)">
            <summary>
            O contribuinte deverá associar a assinatura do Aplicativo Comercial com o SAT através da
            função AssociarAssinatura.
            </summary>
            <param name="CNPJvalue">CNPJ da empresa desenvolvedora do Aplicativo Comercial + CNPJ do Emitente (vide 2.1.3 da Especificação de Requisitos)</param>
            <param name="assinaturaCNPJs">Assinatura digital conjunto "CNPJ Software House" + "CNPJ do estabelecimento comercial". (vide 2.1.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.AtivarSAT(System.Int32,System.String,System.Int32)">
            <summary>
            Esta função faz parte do processo de ativação do Equipamento SAT e será responsável por enviar ao SAT qual o tipo de ativação será efetuada pelo Contribuinte.
            SubComando:
            1  -  Tipo de Certificado = AC-SAT/SEFAZ
            2  -  Tipo de Certificado = ICP-BRASIL
            3  -  Renovação do Certificado ICP-BRASIL
            </summary>
            <param name="subComando">Identificador do tipo de Certificado, descritos na tabela 15</param>
            <param name="CNPJ">CNPJ do contribuinte, somente números</param>
            <param name="cUF">Código do Estado da Federação, segundo tabela do IBGE, onde o SAT será ativado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.AtualizarSoftwareSAT">
            <summary>
            Documentação não encontrada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.BloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            bloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.CancelarUltimaVenda(System.String,System.String)">
            <summary>
            O envio dos dados de cancelamento da venda ocorrerá de acordo com as definições a seguir.
            </summary>
            <param name="chave">Chave de acesso do CF-e-SAT a ser cancelado precedida do literal 'CFe' (vide 4.7 da Especificação de Requisitos)</param>
            <param name="dadosCancelamento">refere-se aos dados da venda gerados pelo AC e utilizados para compor o CF-e-SAT de cancelamento(vide 4.2.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.ConfigurarInterfaceDeRede(System.String)">
            <summary>
            O AC, ou outro software fornecido pelo Fabricante, poderá configurar a interface de
            comunicação do Equipamento SAT com a rede local do estabelecimento comercial através do envio de um arquivo de configuração no padrão XML.
            </summary>
            <param name="dadosConfiguracao">Arquivo de configuração no formato XML.</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.ConsultarNumeroSessao(System.Int32)">
            <summary>
            O AC poderá verificar se a última sessão requisitada foi processada em caso de não
            recebimento do retorno da operação.O equipamento SAT-CF-e retornará exatamente o
            resultado da sessão consultada.
            </summary>
            <param name="cNumeroDeSessao">Número de sessão a ser consultado no SAT-CF-e</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.ConsultarSAT">
            <summary>
            Esta função é usada para testes de comunicação entre o AC e o Equipamento SAT.
            Header: char* ConsultarSAT(int numeroSessao);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.ConsultarStatusOperacional">
            <summary>
            Essa função é responsável por verificar a situação de funcionamento do Equipamento SAT
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.DesbloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            desbloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.EnviarDadosVenda(System.String)">
            <summary>
            Esta função faz parte do processo de envio dos dados de venda do AC para o Equipamento SAT.
            </summary>
            <param name="dadosVenda"> refere-se aos dados de venda gerados pelo AC e utilizados para compor o CF-e-SAT. (2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.ExtrairLogs">
            <summary>
            O Aplicativo Comercial poderá extrair os arquivos de registro do Equipamento SAT por meio
            da função ExtrairLogs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.TesteFimAFim(System.String)">
            <summary>
            Esta função consiste em um teste de comunicação entre o AC, o Equipamento SAT e a SEFAZ.
            </summary>
            <param name="dadosVenda">refere-se aos dados de venda fictícios gerados pelo AC e utilizados para compor o CF-e-SAT de teste. (vide 2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.TrocarCodigoDeAtivacao(System.String,System.String,System.String)">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar a troca do código de ativação a qualquer momento.
            </summary>
            <param name="opcao">Refere-se a opção do conteúdo do parâmetro "codigoDeAtivacao", sendo :
            1 - Código de Ativação
            2 - Código de Ativação de Emergência
            </param>
            <param name="novoCodigo">Novo código de ativação escolhido pelo contribuinte</param>
            <param name="confNovoCodigo">Confirmação do novo código de ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.AssociarAssinatura(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço AssociarAssinatura
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJvalue">CNPJ</param>
            <param name="assinaturaCNPJs">Assinatura</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.AtivarSAT(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço AtivarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="subComando">Sub-comando</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJ">CNPJ</param>
            <param name="cUF">UF</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.AtualizarSoftwareSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço AtualizarSoftwareSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.BloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço BloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.CancelarUltimaVenda(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço CancelarUltimaVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="chave">Chave de acesso</param>
            <param name="dadosCancelamento">XML do cancelamento</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.ComunicarCertificadoICPBRASIL(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ComunicarCertificadoICPBRASIL
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="certificado">Cerificado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.ConfigurarInterfaceDeRede(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ConfigurarInterfaceDeRede
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosConfiguracao">XML de Configuração</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.ConsultarNumeroSessao(System.Int32,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarNumeroSessao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="cNumeroDeSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.ConsultarSAT(System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.ConsultarStatusOperacional(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ConsultarStatusOperacional
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.DesbloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço DesbloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.EnviarDadosVenda(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço EnviarDadosVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.ExtrairLogs(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ExtrairLogs
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.TesteFimAFim(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TesteFimAFim
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Dimep.TrocarCodigoDeAtivacao(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TrocarCodigoDeAtivacao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="opcao">Opção</param>
            <param name="novoCodigo">Nova código de ativação</param>
            <param name="confNovoCodigo">Confirmação do código de confirmação</param>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Fabricante.Emulador">
            <summary>
            Classe responsável pela comunicação com a DLL Tanca
            </summary>
            <summary>
            Classe responsável pela comunicação com a DLL Tanca
            </summary>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.#ctor(Unimake.SAT.Enuns.Fabricante,System.String)">
            <summary>
            Construtor
            </summary>
            <param name="fabricante"></param>
            <param name="codigoAtivacao"></param>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.AssociarAssinatura(System.String,System.String)">
            <summary>
            O contribuinte deverá associar a assinatura do Aplicativo Comercial com o SAT através da
            função AssociarAssinatura.
            </summary>
            <param name="CNPJvalue">CNPJ da empresa desenvolvedora do Aplicativo Comercial + CNPJ do Emitente (vide 2.1.3 da Especificação de Requisitos)</param>
            <param name="assinaturaCNPJs">Assinatura digital conjunto "CNPJ Software House" + "CNPJ do estabelecimento comercial". (vide 2.1.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.AtivarSAT(System.Int32,System.String,System.Int32)">
            <summary>
            Esta função faz parte do processo de ativação do Equipamento SAT e será responsável por enviar ao SAT qual o tipo de ativação será efetuada pelo Contribuinte.
            SubComando:
            1  -  Tipo de Certificado = AC-SAT/SEFAZ
            2  -  Tipo de Certificado = ICP-BRASIL
            3  -  Renovação do Certificado ICP-BRASIL
            </summary>
            <param name="subComando">Identificador do tipo de Certificado, descritos na tabela 15</param>
            <param name="CNPJ">CNPJ do contribuinte, somente números</param>
            <param name="cUF">Código do Estado da Federação, segundo tabela do IBGE, onde o SAT será ativado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.AtualizarSoftwareSAT">
            <summary>
            Documentação não encontrada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.BloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            bloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.CancelarUltimaVenda(System.String,System.String)">
            <summary>
            O envio dos dados de cancelamento da venda ocorrerá de acordo com as definições a seguir.
            </summary>
            <param name="chave">Chave de acesso do CF-e-SAT a ser cancelado precedida do literal 'CFe' (vide 4.7 da Especificação de Requisitos)</param>
            <param name="dadosCancelamento">refere-se aos dados da venda gerados pelo AC e utilizados para compor o CF-e-SAT de cancelamento(vide 4.2.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.ConfigurarInterfaceDeRede(System.String)">
            <summary>
            O AC, ou outro software fornecido pelo Fabricante, poderá configurar a interface de
            comunicação do Equipamento SAT com a rede local do estabelecimento comercial através do envio de um arquivo de configuração no padrão XML.
            </summary>
            <param name="dadosConfiguracao">Arquivo de configuração no formato XML.</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.ConsultarNumeroSessao(System.Int32)">
            <summary>
            O AC poderá verificar se a última sessão requisitada foi processada em caso de não
            recebimento do retorno da operação.O equipamento SAT-CF-e retornará exatamente o
            resultado da sessão consultada.
            </summary>
            <param name="cNumeroDeSessao">Número de sessão a ser consultado no SAT-CF-e</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.ConsultarSAT">
            <summary>
            Esta função é usada para testes de comunicação entre o AC e o Equipamento SAT.
            Header: char* ConsultarSAT(int numeroSessao);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.ConsultarStatusOperacional">
            <summary>
            Essa função é responsável por verificar a situação de funcionamento do Equipamento SAT
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.DesbloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            desbloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.EnviarDadosVenda(System.String)">
            <summary>
            Esta função faz parte do processo de envio dos dados de venda do AC para o Equipamento SAT.
            </summary>
            <param name="dadosVenda"> refere-se aos dados de venda gerados pelo AC e utilizados para compor o CF-e-SAT. (2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.ExtrairLogs">
            <summary>
            O Aplicativo Comercial poderá extrair os arquivos de registro do Equipamento SAT por meio
            da função ExtrairLogs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.TesteFimAFim(System.String)">
            <summary>
            Esta função consiste em um teste de comunicação entre o AC, o Equipamento SAT e a SEFAZ.
            </summary>
            <param name="dadosVenda">refere-se aos dados de venda fictícios gerados pelo AC e utilizados para compor o CF-e-SAT de teste. (vide 2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.TrocarCodigoDeAtivacao(System.String,System.String,System.String)">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar a troca do código de ativação a qualquer momento.
            </summary>
            <param name="opcao">Refere-se a opção do conteúdo do parâmetro "codigoDeAtivacao", sendo :
            1 - Código de Ativação
            2 - Código de Ativação de Emergência
            </param>
            <param name="novoCodigo">Novo código de ativação escolhido pelo contribuinte</param>
            <param name="confNovoCodigo">Confirmação do novo código de ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.AssociarAssinatura(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço AssociarAssinatura
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJvalue">CNPJ</param>
            <param name="assinaturaCNPJs">Assinatura</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.AtivarSAT(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço AtivarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="subComando">Sub-comando</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJ">CNPJ</param>
            <param name="cUF">UF</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.AtualizarSoftwareSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço AtualizarSoftwareSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.BloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço BloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.CancelarUltimaVenda(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço CancelarUltimaVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="chave">Chave de acesso</param>
            <param name="dadosCancelamento">XML do cancelamento</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.ComunicarCertificadoICPBRASIL(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ComunicarCertificadoICPBRASIL
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="certificado">Cerificado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.ConfigurarInterfaceDeRede(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ConfigurarInterfaceDeRede
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosConfiguracao">XML de Configuração</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.ConsultarNumeroSessao(System.Int32,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarNumeroSessao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="cNumeroDeSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.ConsultarSAT(System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.ConsultarStatusOperacional(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ConsultarStatusOperacional
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.DesbloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço DesbloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.EnviarDadosVenda(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço EnviarDadosVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.ExtrairLogs(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ExtrairLogs
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.TesteFimAFim(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TesteFimAFim
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Emulador.TrocarCodigoDeAtivacao(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TrocarCodigoDeAtivacao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="opcao">Opção</param>
            <param name="novoCodigo">Nova código de ativação</param>
            <param name="confNovoCodigo">Confirmação do código de confirmação</param>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Fabricante.Tanca">
            <summary>
            Classe responsável pela comunicação com a DLL Tanca
            </summary>
            <summary>
            Classe responsável pela comunicação com a DLL Tanca
            </summary>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.AssociarAssinatura(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço AssociarAssinatura
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJvalue">CNPJ</param>
            <param name="assinaturaCNPJs">Assinatura</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.AtivarSAT(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço AtivarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="subComando">Sub-comando</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="CNPJ">CNPJ</param>
            <param name="cUF">UF</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.AtualizarSoftwareSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço AtualizarSoftwareSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.BloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço BloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.CancelarUltimaVenda(System.Int32,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço CancelarUltimaVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="chave">Chave de acesso</param>
            <param name="dadosCancelamento">XML do cancelamento</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.ComunicarCertificadoICPBRASIL(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ComunicarCertificadoICPBRASIL
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="certificado">Cerificado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.ConfigurarInterfaceDeRede(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço ConfigurarInterfaceDeRede
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosConfiguracao">XML de Configuração</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.ConsultarNumeroSessao(System.Int32,System.String,System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarNumeroSessao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="cNumeroDeSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.ConsultarSAT(System.Int32)">
            <summary>
            Consumo da DLL para o serviço ConsultarSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.ConsultarStatusOperacional(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ConsultarStatusOperacional
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.DesbloquearSAT(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço DesbloquearSAT
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.EnviarDadosVenda(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço EnviarDadosVenda
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.ExtrairLogs(System.Int32,System.String)">
            <summary>
            Consumo da DLL para o serviço ExtrairLogs
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.TesteFimAFim(System.Int32,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TesteFimAFim
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="dadosVenda">XML da venda</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.TrocarCodigoDeAtivacao(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Consumo da DLL para o serviço TrocarCodigoDeAtivacao
            </summary>
            <param name="numeroSessao">Numero da sessão</param>
            <param name="codigoDeAtivacao">Código de Ativação</param>
            <param name="opcao">Opção</param>
            <param name="novoCodigo">Nova código de ativação</param>
            <param name="confNovoCodigo">Confirmação do código de confirmação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.#ctor(Unimake.SAT.Enuns.Fabricante,System.String)">
            <summary>
            Construtor
            </summary>
            <param name="fabricante"></param>
            <param name="codigoAtivacao"></param>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.AssociarAssinatura(System.String,System.String)">
            <summary>
            O contribuinte deverá associar a assinatura do Aplicativo Comercial com o SAT através da
            função AssociarAssinatura.
            </summary>
            <param name="CNPJvalue">CNPJ da empresa desenvolvedora do Aplicativo Comercial + CNPJ do Emitente (vide 2.1.3 da Especificação de Requisitos)</param>
            <param name="assinaturaCNPJs">Assinatura digital conjunto "CNPJ Software House" + "CNPJ do estabelecimento comercial". (vide 2.1.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.AtivarSAT(System.Int32,System.String,System.Int32)">
            <summary>
            Esta função faz parte do processo de ativação do Equipamento SAT e será responsável por enviar ao SAT qual o tipo de ativação será efetuada pelo Contribuinte.
            SubComando:
            1  -  Tipo de Certificado = AC-SAT/SEFAZ
            2  -  Tipo de Certificado = ICP-BRASIL
            3  -  Renovação do Certificado ICP-BRASIL
            </summary>
            <param name="subComando">Identificador do tipo de Certificado, descritos na tabela 15</param>
            <param name="CNPJ">CNPJ do contribuinte, somente números</param>
            <param name="cUF">Código do Estado da Federação, segundo tabela do IBGE, onde o SAT será ativado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.AtualizarSoftwareSAT">
            <summary>
            Documentação não encontrada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.BloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            bloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.CancelarUltimaVenda(System.String,System.String)">
            <summary>
            O envio dos dados de cancelamento da venda ocorrerá de acordo com as definições a seguir.
            </summary>
            <param name="chave">Chave de acesso do CF-e-SAT a ser cancelado precedida do literal 'CFe' (vide 4.7 da Especificação de Requisitos)</param>
            <param name="dadosCancelamento">refere-se aos dados da venda gerados pelo AC e utilizados para compor o CF-e-SAT de cancelamento(vide 4.2.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.ConfigurarInterfaceDeRede(System.String)">
            <summary>
            O AC, ou outro software fornecido pelo Fabricante, poderá configurar a interface de
            comunicação do Equipamento SAT com a rede local do estabelecimento comercial através do envio de um arquivo de configuração no padrão XML.
            </summary>
            <param name="dadosConfiguracao">Arquivo de configuração no formato XML.</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.ConsultarNumeroSessao(System.Int32)">
            <summary>
            O AC poderá verificar se a última sessão requisitada foi processada em caso de não
            recebimento do retorno da operação.O equipamento SAT-CF-e retornará exatamente o
            resultado da sessão consultada.
            </summary>
            <param name="cNumeroDeSessao">Número de sessão a ser consultado no SAT-CF-e</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.ConsultarSAT">
            <summary>
            Esta função é usada para testes de comunicação entre o AC e o Equipamento SAT.
            Header: char* ConsultarSAT(int numeroSessao);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.ConsultarStatusOperacional">
            <summary>
            Essa função é responsável por verificar a situação de funcionamento do Equipamento SAT
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.DesbloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            desbloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.EnviarDadosVenda(System.String)">
            <summary>
            Esta função faz parte do processo de envio dos dados de venda do AC para o Equipamento SAT.
            </summary>
            <param name="dadosVenda"> refere-se aos dados de venda gerados pelo AC e utilizados para compor o CF-e-SAT. (2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.ExtrairLogs">
            <summary>
            O Aplicativo Comercial poderá extrair os arquivos de registro do Equipamento SAT por meio
            da função ExtrairLogs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.TesteFimAFim(System.String)">
            <summary>
            Esta função consiste em um teste de comunicação entre o AC, o Equipamento SAT e a SEFAZ.
            </summary>
            <param name="dadosVenda">refere-se aos dados de venda fictícios gerados pelo AC e utilizados para compor o CF-e-SAT de teste. (vide 2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Fabricante.Tanca.TrocarCodigoDeAtivacao(System.String,System.String,System.String)">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar a troca do código de ativação a qualquer momento.
            </summary>
            <param name="opcao">Refere-se a opção do conteúdo do parâmetro "codigoDeAtivacao", sendo :
            1 - Código de Ativação
            2 - Código de Ativação de Emergência
            </param>
            <param name="novoCodigo">Novo código de ativação escolhido pelo contribuinte</param>
            <param name="confNovoCodigo">Confirmação do novo código de ativação</param>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.SAT">
            <summary>
            Classe de comunicação com equipamento S@T
            Renan Borges / renan@unimake.com.br
            06/10/2016
            </summary>
        </member>
        <member name="F:Unimake.SAT.SAT._ServicoDLL">
            <summary>
            Define o serviço de qual DLL será utilizado
            </summary>
        </member>
        <member name="P:Unimake.SAT.SAT.ServicoDLL">
            <summary>
            Define o serviço de qual DLL será utilizado
            </summary>
        </member>
        <member name="M:Unimake.SAT.SAT.#ctor(Unimake.SAT.Enuns.Fabricante,System.String)">
            <summary>
            Construtor
            </summary>
            <param name="fabricante">fabricante</param>
            <param name="codigoAtivacao">código de ativação do equipamento</param>
        </member>
        <member name="M:Unimake.SAT.SAT.AssociarAssinatura(System.String,System.String)">
            <summary>
            O contribuinte deverá associar a assinatura do Aplicativo Comercial com o SAT através da
            função AssociarAssinatura.
            </summary>
            <param name="CNPJvalue">CNPJ da empresa desenvolvedora do Aplicativo Comercial + CNPJ do Emitente (vide 2.1.3 da Especificação de Requisitos)</param>
            <param name="assinaturaCNPJs">Assinatura digital conjunto "CNPJ Software House" + "CNPJ do estabelecimento comercial". (vide 2.1.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.SAT.AtivarSAT(System.Int32,System.String,System.Int32)">
            <summary>
            Esta função faz parte do processo de ativação do Equipamento SAT e será responsável por enviar ao SAT qual o tipo de ativação será efetuada pelo Contribuinte.
            SubComando:
            1  -  Tipo de Certificado = AC-SAT/SEFAZ
            2  -  Tipo de Certificado = ICP-BRASIL
            3  -  Renovação do Certificado ICP-BRASIL
            </summary>
            <param name="subComando">Identificador do tipo de Certificado, descritos na tabela 15</param>
            <param name="CNPJ">CNPJ do contribuinte, somente números</param>
            <param name="cUF">Código do Estado da Federação, segundo tabela do IBGE, onde o SAT será ativado</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.SAT.AtualizarSoftwareSAT">
            <summary>
            Documentação não encontrada
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.SAT.BloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            bloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.SAT.CancelarUltimaVenda(System.String,System.String)">
            <summary>
            O envio dos dados de cancelamento da venda ocorrerá de acordo com as definições a seguir.
            </summary>
            <param name="chave">Chave de acesso do CF-e-SAT a ser cancelado precedida do literal 'CFe' (vide 4.7 da Especificação de Requisitos)</param>
            <param name="dadosCancelamento">refere-se aos dados da venda gerados pelo AC e utilizados para compor o CF-e-SAT de cancelamento(vide 4.2.3 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.SAT.ConfigurarInterfaceDeRede(System.String)">
            <summary>
            O AC, ou outro software fornecido pelo Fabricante, poderá configurar a interface de
            comunicação do Equipamento SAT com a rede local do estabelecimento comercial através do envio de um arquivo de configuração no padrão XML.
            </summary>
            <param name="dadosConfiguracao">Arquivo de configuração no formato XML.</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.SAT.ConsultarNumeroSessao(System.Int32)">
            <summary>
            O AC poderá verificar se a última sessão requisitada foi processada em caso de não
            recebimento do retorno da operação.O equipamento SAT-CF-e retornará exatamente o
            resultado da sessão consultada.
            </summary>
            <param name="cNumeroDeSessao">Número de sessão a ser consultado no SAT-CF-e</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.SAT.ConsultarSAT">
            <summary>
            Esta função é usada para testes de comunicação entre o AC e o Equipamento SAT.
            Header: char* ConsultarSAT(int numeroSessao);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.SAT.ConsultarStatusOperacional">
            <summary>
            Essa função é responsável por verificar a situação de funcionamento do Equipamento SAT
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.SAT.DesbloquearSAT">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar o
            desbloqueio operacional do Equipamento SAT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.SAT.EnviarDadosVenda(System.String)">
            <summary>
            Esta função faz parte do processo de envio dos dados de venda do AC para o Equipamento SAT.
            </summary>
            <param name="dadosVenda"> refere-se aos dados de venda gerados pelo AC e utilizados para compor o CF-e-SAT. (2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.SAT.ExtrairLogs">
            <summary>
            O Aplicativo Comercial poderá extrair os arquivos de registro do Equipamento SAT por meio
            da função ExtrairLogs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.SAT.TesteFimAFim(System.String)">
            <summary>
            Esta função consiste em um teste de comunicação entre o AC, o Equipamento SAT e a SEFAZ.
            </summary>
            <param name="dadosVenda">refere-se aos dados de venda fictícios gerados pelo AC e utilizados para compor o CF-e-SAT de teste. (vide 2.1.4 da Especificação de Requisitos)</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.SAT.TrocarCodigoDeAtivacao(System.String,System.String,System.String)">
            <summary>
            O Aplicativo Comercial ou outro software fornecido pelo Fabricante poderá realizar a troca do código de ativação a qualquer momento.
            </summary>
            <param name="opcao">Refere-se a opção do conteúdo do parâmetro "codigoDeAtivacao", sendo :
            1 - Código de Ativação
            2 - Código de Ativação de Emergência
            </param>
            <param name="novoCodigo">Novo código de ativação escolhido pelo contribuinte</param>
            <param name="confNovoCodigo">Confirmação do novo código de ativação</param>
            <returns></returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFe.ShouldSerializeLoteCFe">
            <summary>
            Test whether LoteCFe should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFe.ShouldSerializetpAmb">
            <summary>
            Test whether tpAmb should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFe.ShouldSerializeidLote">
            <summary>
            Test whether idLote should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFe.ShouldSerializecUF">
            <summary>
            Test whether cUF should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFe.ShouldSerializenSeg">
            <summary>
            Test whether nSeg should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFe.ShouldSerializedhEnvio">
            <summary>
            Test whether dhEnvio should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFe.ShouldSerializenserieSAT">
            <summary>
            Test whether nserieSAT should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFe.ShouldSerializeversao">
            <summary>
            Test whether versao should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFe.Serialize">
            <summary>
            Serializes current envCFe object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFe.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFe@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFe object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFe object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFe.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFe object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFe.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFe@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFe object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFe object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFe.ShouldSerializeAny">
            <summary>
            Test whether Any should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFe.ShouldSerializeinfCFe">
            <summary>
            Test whether infCFe should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFe.Serialize">
            <summary>
            Serializes current envCFeCFe object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFe.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFe@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFe object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFe object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFe.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFe object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFe.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFe@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFe object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFe object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFe.ShouldSerializedet">
            <summary>
            Test whether det should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFe.ShouldSerializeide">
            <summary>
            Test whether ide should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFe.ShouldSerializeemit">
            <summary>
            Test whether emit should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFe.ShouldSerializedest">
            <summary>
            Test whether dest should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFe.ShouldSerializeentrega">
            <summary>
            Test whether entrega should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFe.ShouldSerializetotal">
            <summary>
            Test whether total should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFe.ShouldSerializepgto">
            <summary>
            Test whether pgto should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFe.ShouldSerializeinfAdic">
            <summary>
            Test whether infAdic should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFe.ShouldSerializeversao">
            <summary>
            Test whether versao should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFe.ShouldSerializeversaoDadosEnt">
            <summary>
            Test whether versaoDadosEnt should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFe.ShouldSerializeversaoSB">
            <summary>
            Test whether versaoSB should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFe.ShouldSerializeId">
            <summary>
            Test whether Id should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFe.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFe object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFe.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFe@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFe object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFe object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFe.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFe object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFe.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFe@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFe object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFe object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.ShouldSerializecUF">
            <summary>
            Test whether cUF should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.ShouldSerializecNF">
            <summary>
            Test whether cNF should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.ShouldSerializemod">
            <summary>
            Test whether mod should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.ShouldSerializenserieSAT">
            <summary>
            Test whether nserieSAT should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.ShouldSerializenCFe">
            <summary>
            Test whether nCFe should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.ShouldSerializedEmi">
            <summary>
            Test whether dEmi should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.ShouldSerializehEmi">
            <summary>
            Test whether hEmi should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.ShouldSerializecDV">
            <summary>
            Test whether cDV should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.ShouldSerializetpAmb">
            <summary>
            Test whether tpAmb should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.ShouldSerializeCNPJ">
            <summary>
            Test whether CNPJ should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.ShouldSerializesignAC">
            <summary>
            Test whether signAC should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.ShouldSerializeassinaturaQRCODE">
            <summary>
            Test whether assinaturaQRCODE should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.ShouldSerializenumeroCaixa">
            <summary>
            Test whether numeroCaixa should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeIde object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeIde object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeIde object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeIde object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeIde@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeIde object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeIde object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmit.ShouldSerializeenderEmit">
            <summary>
            Test whether enderEmit should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmit.ShouldSerializeCNPJ">
            <summary>
            Test whether CNPJ should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmit.ShouldSerializexNome">
            <summary>
            Test whether xNome should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmit.ShouldSerializexFant">
            <summary>
            Test whether xFant should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmit.ShouldSerializeIE">
            <summary>
            Test whether IE should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmit.ShouldSerializeIM">
            <summary>
            Test whether IM should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmit.ShouldSerializecRegTrib">
            <summary>
            Test whether cRegTrib should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmit.ShouldSerializecRegTribISSQN">
            <summary>
            Test whether cRegTribISSQN should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmit.ShouldSerializeindRatISSQN">
            <summary>
            Test whether indRatISSQN should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmit.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeEmit object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmit.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmit@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeEmit object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeEmit object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmit.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeEmit object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmit.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmit@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeEmit object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeEmit object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmitEnderEmit.ShouldSerializexLgr">
            <summary>
            Test whether xLgr should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmitEnderEmit.ShouldSerializenro">
            <summary>
            Test whether nro should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmitEnderEmit.ShouldSerializexCpl">
            <summary>
            Test whether xCpl should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmitEnderEmit.ShouldSerializexBairro">
            <summary>
            Test whether xBairro should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmitEnderEmit.ShouldSerializexMun">
            <summary>
            Test whether xMun should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmitEnderEmit.ShouldSerializeCEP">
            <summary>
            Test whether CEP should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmitEnderEmit.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeEmitEnderEmit object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmitEnderEmit.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmitEnderEmit@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeEmitEnderEmit object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeEmitEnderEmit object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmitEnderEmit.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeEmitEnderEmit object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmitEnderEmit.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEmitEnderEmit@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeEmitEnderEmit object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeEmitEnderEmit object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDest.ShouldSerializeItemElementName">
            <summary>
            Test whether ItemElementName should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDest.ShouldSerializeItem">
            <summary>
            Test whether Item should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDest.ShouldSerializexNome">
            <summary>
            Test whether xNome should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDest.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDest object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDest.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDest@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDest object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDest object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDest.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDest object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDest.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDest@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDest object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDest object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemChoiceType.CNPJ">
            <remarks/>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemChoiceType.CPF">
            <remarks/>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEntrega.ShouldSerializexLgr">
            <summary>
            Test whether xLgr should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEntrega.ShouldSerializenro">
            <summary>
            Test whether nro should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEntrega.ShouldSerializexCpl">
            <summary>
            Test whether xCpl should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEntrega.ShouldSerializexBairro">
            <summary>
            Test whether xBairro should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEntrega.ShouldSerializexMun">
            <summary>
            Test whether xMun should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEntrega.ShouldSerializeUF">
            <summary>
            Test whether UF should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEntrega.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeEntrega object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEntrega.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEntrega@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeEntrega object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeEntrega object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEntrega.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeEntrega object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEntrega.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeEntrega@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeEntrega object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeEntrega object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDet.ShouldSerializeprod">
            <summary>
            Test whether prod should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDet.ShouldSerializeimposto">
            <summary>
            Test whether imposto should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDet.ShouldSerializeinfAdProd">
            <summary>
            Test whether infAdProd should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDet.ShouldSerializenItem">
            <summary>
            Test whether nItem should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDet.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDet object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDet.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDet@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDet object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDet object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDet.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDet object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDet.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDet@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDet object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDet object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.ShouldSerializeobsFiscoDet">
            <summary>
            Test whether obsFiscoDet should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.ShouldSerializecProd">
            <summary>
            Test whether cProd should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.ShouldSerializecEAN">
            <summary>
            Test whether cEAN should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.ShouldSerializexProd">
            <summary>
            Test whether xProd should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.ShouldSerializeNCM">
            <summary>
            Test whether NCM should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.ShouldSerializeCFOP">
            <summary>
            Test whether CFOP should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.ShouldSerializeuCom">
            <summary>
            Test whether uCom should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.ShouldSerializeqCom">
            <summary>
            Test whether qCom should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.ShouldSerializevUnCom">
            <summary>
            Test whether vUnCom should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.ShouldSerializevProd">
            <summary>
            Test whether vProd should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.ShouldSerializeindRegra">
            <summary>
            Test whether indRegra should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.ShouldSerializevDesc">
            <summary>
            Test whether vDesc should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.ShouldSerializevOutro">
            <summary>
            Test whether vOutro should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.ShouldSerializevItem">
            <summary>
            Test whether vItem should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.ShouldSerializevRatDesc">
            <summary>
            Test whether vRatDesc should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.ShouldSerializevRatAcr">
            <summary>
            Test whether vRatAcr should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetProd object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetProd object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetProd object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetProd object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProd@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetProd object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetProd object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProdObsFiscoDet.ShouldSerializexTextoDet">
            <summary>
            Test whether xTextoDet should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProdObsFiscoDet.ShouldSerializexCampoDet">
            <summary>
            Test whether xCampoDet should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProdObsFiscoDet.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetProdObsFiscoDet object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProdObsFiscoDet.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProdObsFiscoDet@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetProdObsFiscoDet object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetProdObsFiscoDet object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProdObsFiscoDet.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetProdObsFiscoDet object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProdObsFiscoDet.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetProdObsFiscoDet@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetProdObsFiscoDet object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetProdObsFiscoDet object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImposto.ShouldSerializeItem">
            <summary>
            Test whether Item should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImposto.ShouldSerializePIS">
            <summary>
            Test whether PIS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImposto.ShouldSerializePISST">
            <summary>
            Test whether PISST should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImposto.ShouldSerializeCOFINS">
            <summary>
            Test whether COFINS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImposto.ShouldSerializeCOFINSST">
            <summary>
            Test whether COFINSST should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImposto.ShouldSerializevItem12741">
            <summary>
            Test whether vItem12741 should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImposto.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImposto object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImposto.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImposto@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImposto object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImposto object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImposto.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImposto object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImposto.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImposto@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImposto object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImposto object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMS.ShouldSerializeItem">
            <summary>
            Test whether Item should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMS.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoICMS object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMS.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMS@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoICMS object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoICMS object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMS.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoICMS object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMS.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMS@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoICMS object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoICMS object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS00.ShouldSerializeOrig">
            <summary>
            Test whether Orig should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS00.ShouldSerializeCST">
            <summary>
            Test whether CST should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS00.ShouldSerializepICMS">
            <summary>
            Test whether pICMS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS00.ShouldSerializevICMS">
            <summary>
            Test whether vICMS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS00.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoICMSICMS00 object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS00.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS00@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoICMSICMS00 object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoICMSICMS00 object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS00.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoICMSICMS00 object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS00.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS00@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoICMSICMS00 object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoICMSICMS00 object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS40.ShouldSerializeOrig">
            <summary>
            Test whether Orig should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS40.ShouldSerializeCST">
            <summary>
            Test whether CST should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS40.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoICMSICMS40 object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS40.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS40@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoICMSICMS40 object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoICMSICMS40 object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS40.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoICMSICMS40 object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS40.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMS40@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoICMSICMS40 object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoICMSICMS40 object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN102.ShouldSerializeOrig">
            <summary>
            Test whether Orig should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN102.ShouldSerializeCSOSN">
            <summary>
            Test whether CSOSN should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN102.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoICMSICMSSN102 object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN102.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN102@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoICMSICMSSN102 object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoICMSICMSSN102 object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN102.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoICMSICMSSN102 object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN102.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN102@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoICMSICMSSN102 object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoICMSICMSSN102 object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN900.ShouldSerializeOrig">
            <summary>
            Test whether Orig should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN900.ShouldSerializeCSOSN">
            <summary>
            Test whether CSOSN should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN900.ShouldSerializepICMS">
            <summary>
            Test whether pICMS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN900.ShouldSerializevICMS">
            <summary>
            Test whether vICMS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN900.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoICMSICMSSN900 object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN900.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN900@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoICMSICMSSN900 object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoICMSICMSSN900 object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN900.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoICMSICMSSN900 object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN900.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoICMSICMSSN900@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoICMSICMSSN900 object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoICMSICMSSN900 object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoISSQN.ShouldSerializevDeducISSQN">
            <summary>
            Test whether vDeducISSQN should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoISSQN.ShouldSerializevBC">
            <summary>
            Test whether vBC should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoISSQN.ShouldSerializevAliq">
            <summary>
            Test whether vAliq should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoISSQN.ShouldSerializevISSQN">
            <summary>
            Test whether vISSQN should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoISSQN.ShouldSerializecMunFG">
            <summary>
            Test whether cMunFG should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoISSQN.ShouldSerializecListServ">
            <summary>
            Test whether cListServ should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoISSQN.ShouldSerializecServTribMun">
            <summary>
            Test whether cServTribMun should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoISSQN.ShouldSerializecNatOp">
            <summary>
            Test whether cNatOp should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoISSQN.ShouldSerializeindIncFisc">
            <summary>
            Test whether indIncFisc should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoISSQN.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoISSQN object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoISSQN.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoISSQN@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoISSQN object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoISSQN object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoISSQN.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoISSQN object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoISSQN.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoISSQN@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoISSQN object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoISSQN object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPIS.ShouldSerializeItem">
            <summary>
            Test whether Item should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPIS.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoPIS object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPIS.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPIS@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoPIS object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoPIS object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPIS.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoPIS object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPIS.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPIS@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoPIS object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoPIS object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISAliq.ShouldSerializeCST">
            <summary>
            Test whether CST should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISAliq.ShouldSerializevBC">
            <summary>
            Test whether vBC should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISAliq.ShouldSerializepPIS">
            <summary>
            Test whether pPIS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISAliq.ShouldSerializevPIS">
            <summary>
            Test whether vPIS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISAliq.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoPISPISAliq object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISAliq.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISAliq@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoPISPISAliq object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoPISPISAliq object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISAliq.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoPISPISAliq object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISAliq.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISAliq@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoPISPISAliq object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoPISPISAliq object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISNT.ShouldSerializeCST">
            <summary>
            Test whether CST should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISNT.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoPISPISNT object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISNT.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISNT@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoPISPISNT object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoPISPISNT object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISNT.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoPISPISNT object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISNT.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISNT@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoPISPISNT object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoPISPISNT object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISOutr.ShouldSerializeCST">
            <summary>
            Test whether CST should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISOutr.ShouldSerializevPIS">
            <summary>
            Test whether vPIS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISOutr.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoPISPISOutr object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISOutr.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISOutr@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoPISPISOutr object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoPISPISOutr object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISOutr.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoPISPISOutr object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISOutr.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISOutr@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoPISPISOutr object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoPISPISOutr object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemsChoiceType.pPIS">
            <remarks/>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemsChoiceType.qBCProd">
            <remarks/>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemsChoiceType.vAliqProd">
            <remarks/>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemsChoiceType.vBC">
            <remarks/>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISQtde.ShouldSerializeCST">
            <summary>
            Test whether CST should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISQtde.ShouldSerializeqBCProd">
            <summary>
            Test whether qBCProd should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISQtde.ShouldSerializevAliqProd">
            <summary>
            Test whether vAliqProd should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISQtde.ShouldSerializevPIS">
            <summary>
            Test whether vPIS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISQtde.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoPISPISQtde object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISQtde.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISQtde@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoPISPISQtde object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoPISPISQtde object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISQtde.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoPISPISQtde object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISQtde.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISQtde@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoPISPISQtde object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoPISPISQtde object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISSN.ShouldSerializeCST">
            <summary>
            Test whether CST should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISSN.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoPISPISSN object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISSN.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISSN@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoPISPISSN object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoPISPISSN object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISSN.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoPISPISSN object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISSN.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISPISSN@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoPISPISSN object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoPISPISSN object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISST.ShouldSerializevPIS">
            <summary>
            Test whether vPIS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISST.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoPISST object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISST.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISST@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoPISST object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoPISST object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISST.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoPISST object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISST.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoPISST@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoPISST object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoPISST object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemsChoiceType1.pPIS">
            <remarks/>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemsChoiceType1.qBCProd">
            <remarks/>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemsChoiceType1.vAliqProd">
            <remarks/>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemsChoiceType1.vBC">
            <remarks/>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINS.ShouldSerializeItem">
            <summary>
            Test whether Item should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINS.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoCOFINS object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINS.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINS@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoCOFINS object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoCOFINS object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINS.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoCOFINS object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINS.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINS@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoCOFINS object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoCOFINS object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSAliq.ShouldSerializeCST">
            <summary>
            Test whether CST should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSAliq.ShouldSerializevBC">
            <summary>
            Test whether vBC should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSAliq.ShouldSerializepCOFINS">
            <summary>
            Test whether pCOFINS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSAliq.ShouldSerializevCOFINS">
            <summary>
            Test whether vCOFINS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSAliq.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoCOFINSCOFINSAliq object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSAliq.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSAliq@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoCOFINSCOFINSAliq object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoCOFINSCOFINSAliq object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSAliq.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoCOFINSCOFINSAliq object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSAliq.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSAliq@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoCOFINSCOFINSAliq object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoCOFINSCOFINSAliq object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSNT.ShouldSerializeCST">
            <summary>
            Test whether CST should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSNT.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoCOFINSCOFINSNT object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSNT.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSNT@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoCOFINSCOFINSNT object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoCOFINSCOFINSNT object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSNT.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoCOFINSCOFINSNT object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSNT.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSNT@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoCOFINSCOFINSNT object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoCOFINSCOFINSNT object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSOutr.ShouldSerializeCST">
            <summary>
            Test whether CST should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSOutr.ShouldSerializevCOFINS">
            <summary>
            Test whether vCOFINS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSOutr.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoCOFINSCOFINSOutr object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSOutr.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSOutr@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoCOFINSCOFINSOutr object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoCOFINSCOFINSOutr object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSOutr.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoCOFINSCOFINSOutr object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSOutr.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSOutr@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoCOFINSCOFINSOutr object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoCOFINSCOFINSOutr object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemsChoiceType2.pCOFINS">
            <remarks/>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemsChoiceType2.qBCProd">
            <remarks/>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemsChoiceType2.vAliqProd">
            <remarks/>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemsChoiceType2.vBC">
            <remarks/>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSQtde.ShouldSerializeCST">
            <summary>
            Test whether CST should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSQtde.ShouldSerializeqBCProd">
            <summary>
            Test whether qBCProd should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSQtde.ShouldSerializevAliqProd">
            <summary>
            Test whether vAliqProd should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSQtde.ShouldSerializevCOFINS">
            <summary>
            Test whether vCOFINS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSQtde.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoCOFINSCOFINSQtde object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSQtde.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSQtde@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoCOFINSCOFINSQtde object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoCOFINSCOFINSQtde object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSQtde.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoCOFINSCOFINSQtde object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSQtde.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSQtde@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoCOFINSCOFINSQtde object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoCOFINSCOFINSQtde object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSSN.ShouldSerializeCST">
            <summary>
            Test whether CST should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSSN.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoCOFINSCOFINSSN object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSSN.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSSN@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoCOFINSCOFINSSN object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoCOFINSCOFINSSN object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSSN.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoCOFINSCOFINSSN object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSSN.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSCOFINSSN@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoCOFINSCOFINSSN object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoCOFINSCOFINSSN object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSST.ShouldSerializevCOFINS">
            <summary>
            Test whether vCOFINS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSST.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoCOFINSST object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSST.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSST@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeDetImpostoCOFINSST object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoCOFINSST object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSST.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeDetImpostoCOFINSST object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSST.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeDetImpostoCOFINSST@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeDetImpostoCOFINSST object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeDetImpostoCOFINSST object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemsChoiceType3.pCOFINS">
            <remarks/>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemsChoiceType3.qBCProd">
            <remarks/>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemsChoiceType3.vAliqProd">
            <remarks/>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemsChoiceType3.vBC">
            <remarks/>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotal.ShouldSerializeICMSTot">
            <summary>
            Test whether ICMSTot should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotal.ShouldSerializeISSQNtot">
            <summary>
            Test whether ISSQNtot should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotal.ShouldSerializeDescAcrEntr">
            <summary>
            Test whether DescAcrEntr should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotal.ShouldSerializevCFe">
            <summary>
            Test whether vCFe should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotal.ShouldSerializevCFeLei12741">
            <summary>
            Test whether vCFeLei12741 should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotal.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeTotal object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotal.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotal@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeTotal object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeTotal object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotal.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeTotal object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotal.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotal@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeTotal object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeTotal object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalICMSTot.ShouldSerializevICMS">
            <summary>
            Test whether vICMS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalICMSTot.ShouldSerializevProd">
            <summary>
            Test whether vProd should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalICMSTot.ShouldSerializevDesc">
            <summary>
            Test whether vDesc should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalICMSTot.ShouldSerializevPIS">
            <summary>
            Test whether vPIS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalICMSTot.ShouldSerializevCOFINS">
            <summary>
            Test whether vCOFINS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalICMSTot.ShouldSerializevOutro">
            <summary>
            Test whether vOutro should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalICMSTot.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeTotalICMSTot object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalICMSTot.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalICMSTot@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeTotalICMSTot object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeTotalICMSTot object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalICMSTot.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeTotalICMSTot object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalICMSTot.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalICMSTot@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeTotalICMSTot object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeTotalICMSTot object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalISSQNtot.ShouldSerializevBC">
            <summary>
            Test whether vBC should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalISSQNtot.ShouldSerializevISS">
            <summary>
            Test whether vISS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalISSQNtot.ShouldSerializevPIS">
            <summary>
            Test whether vPIS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalISSQNtot.ShouldSerializevCOFINS">
            <summary>
            Test whether vCOFINS should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalISSQNtot.ShouldSerializevPISST">
            <summary>
            Test whether vPISST should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalISSQNtot.ShouldSerializevCOFINSST">
            <summary>
            Test whether vCOFINSST should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalISSQNtot.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeTotalISSQNtot object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalISSQNtot.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalISSQNtot@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeTotalISSQNtot object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeTotalISSQNtot object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalISSQNtot.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeTotalISSQNtot object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalISSQNtot.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalISSQNtot@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeTotalISSQNtot object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeTotalISSQNtot object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalDescAcrEntr.ShouldSerializeItemElementName">
            <summary>
            Test whether ItemElementName should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalDescAcrEntr.ShouldSerializeItem">
            <summary>
            Test whether Item should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalDescAcrEntr.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeTotalDescAcrEntr object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalDescAcrEntr.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalDescAcrEntr@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeTotalDescAcrEntr object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeTotalDescAcrEntr object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalDescAcrEntr.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeTotalDescAcrEntr object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalDescAcrEntr.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeTotalDescAcrEntr@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeTotalDescAcrEntr object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeTotalDescAcrEntr object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemChoiceType1.vAcresSubtot">
            <remarks/>
        </member>
        <member name="F:Unimake.SAT.Servico.Envio.ItemChoiceType1.vDescSubtot">
            <remarks/>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgto.ShouldSerializeMP">
            <summary>
            Test whether MP should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgto.ShouldSerializevTroco">
            <summary>
            Test whether vTroco should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgto.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFePgto object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgto.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgto@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFePgto object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFePgto object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgto.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFePgto object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgto.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgto@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFePgto object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFePgto object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgtoMP.ShouldSerializecMP">
            <summary>
            Test whether cMP should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgtoMP.ShouldSerializevMP">
            <summary>
            Test whether vMP should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgtoMP.ShouldSerializecAdmC">
            <summary>
            Test whether cAdmC should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgtoMP.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFePgtoMP object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgtoMP.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgtoMP@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFePgtoMP object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFePgtoMP object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgtoMP.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFePgtoMP object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgtoMP.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFePgtoMP@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFePgtoMP object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFePgtoMP object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeInfAdic.ShouldSerializeobsFisco">
            <summary>
            Test whether obsFisco should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeInfAdic.ShouldSerializeinfCpl">
            <summary>
            Test whether infCpl should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeInfAdic.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeInfAdic object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeInfAdic.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeInfAdic@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeInfAdic object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeInfAdic object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeInfAdic.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeInfAdic object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeInfAdic.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeInfAdic@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeInfAdic object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeInfAdic object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeInfAdicObsFisco.ShouldSerializexTexto">
            <summary>
            Test whether xTexto should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeInfAdicObsFisco.ShouldSerializexCampo">
            <summary>
            Test whether xCampo should be serialized
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeInfAdicObsFisco.Serialize">
            <summary>
            Serializes current envCFeCFeInfCFeInfAdicObsFisco object into an XML string
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeInfAdicObsFisco.Deserialize(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeInfAdicObsFisco@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an envCFeCFeInfCFeInfAdicObsFisco object
            </summary>
            <param name="input">string workflow markup to deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeInfAdicObsFisco object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeInfAdicObsFisco.SaveToFile(System.String,System.Exception@)">
            <summary>
            Serializes current envCFeCFeInfCFeInfAdicObsFisco object into file
            </summary>
            <param name="fileName">full path of outupt xml file</param>
            <param name="exception">output Exception value if failed</param>
            <returns>true if can serialize and save into file; otherwise, false</returns>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.envCFeCFeInfCFeInfAdicObsFisco.LoadFromFile(System.String,Unimake.SAT.Servico.Envio.envCFeCFeInfCFeInfAdicObsFisco@,System.Exception@)">
            <summary>
            Deserializes xml markup from file into an envCFeCFeInfCFeInfAdicObsFisco object
            </summary>
            <param name="fileName">string xml file to load and deserialize</param>
            <param name="obj">Output envCFeCFeInfCFeInfAdicObsFisco object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="T:Unimake.SAT.Servico.Envio.ConfigurarInterfaceDeRede">
            <summary>
            Objeto de envio de configuração do SAT
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Envio.ConfigurarInterfaceDeRede.CodigoAtivacao">
            <summary>
            Código de ativação
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Envio.ConfigurarInterfaceDeRede.Marca">
            <summary>
            Marca do SAT
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.ConfigurarInterfaceDeRede.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="T:Unimake.SAT.Servico.Envio.TrocarCodigoDeAtivacao">
            <summary>
            Objeto de envio da troca de código de ativação do SAT
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Envio.TrocarCodigoDeAtivacao.CodigoAtivacaoAtual">
            <summary>
            Código de ativação atual
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Envio.TrocarCodigoDeAtivacao.CodigoAtivacaoNovo">
            <summary>
            Código de ativação novo
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Envio.TrocarCodigoDeAtivacao.Marca">
            <summary>
            Marca do SAT
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Envio.TrocarCodigoDeAtivacao.Opcao">
            <summary>
            Opção de uso de código de ativação
            1-Código ativação / 2-Código emergência
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.TrocarCodigoDeAtivacao.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="T:Unimake.SAT.Servico.Envio.ConsultarStatusOperacional">
            <summary>
            Objeto de envio do consulta status do SAT
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Envio.ConsultarStatusOperacional.CodigoAtivacao">
            <summary>
            Código de ativação
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Envio.ConsultarStatusOperacional.Marca">
            <summary>
            Marca do SAT
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.ConsultarStatusOperacional.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="T:Unimake.SAT.Servico.Envio.ExtrairLogs">
            <summary>
            Objeto de envio dos logs do SAT
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Envio.ExtrairLogs.CodigoAtivacao">
            <summary>
            Código de ativação
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Envio.ExtrairLogs.Marca">
            <summary>
            Marca do SAT
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.ExtrairLogs.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="T:Unimake.SAT.Servico.Envio.ConsultarSAT">
            <summary>
            Objeto de envio do consulta SAT
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Envio.ConsultarSAT.CodigoAtivacao">
            <summary>
            Código de ativação
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Envio.ConsultarSAT.Marca">
            <summary>
            Marca do SAT
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Envio.ConsultarSAT.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="T:Unimake.SAT.Servico.Retorno.AtivarSATResponse">
            <summary>
            Resposta Consulta SAT
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.AtivarSATResponse.CSR">
            <summary>
            CSR arquivo (codificado em base 64) contendo as informações para a solicitação do Certificado Digital. Nota: este campo só será retornado caso o parâmetro "subComando" for igual a "2 ou 3"
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.AtivarSATResponse.#ctor(System.String)">
            <summary>
            Construtor
            numeroSessao|EEEEE|mensagem|cod|mensagemSEFAZ
            </summary>
            <param name="response">resposta com delimitadores em pipes</param>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.AtivarSATResponse.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.AtivarSATResponse.ToXML">
            <summary>
            Retorna classe em formato XML
            </summary>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Servico.Retorno.ConsultarNumeroSessaoResponse">
            <summary>
            Resposta Consulta SAT
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.ConsultarNumeroSessaoResponse.#ctor(System.String)">
            <summary>
            Construtor
            numeroSessao|EEEEE|mensagem|cod|mensagemSEFAZ
            </summary>
            <param name="response">resposta com delimitadores em pipes</param>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.ConsultarNumeroSessaoResponse.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.ConsultarNumeroSessaoResponse.ToXML">
            <summary>
            Retorna classe em formato XML
            </summary>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Servico.Retorno.DesbloquearSATResponse">
            <summary>
            Resposta Bloquear SAT
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.DesbloquearSATResponse.#ctor(System.String)">
            <summary>
            Construtor
            numeroSessao|EEEEE|mensagem|cod|mensagemSEFAZ
            </summary>
            <param name="response">resposta com delimitadores em pipes</param>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.DesbloquearSATResponse.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.DesbloquearSATResponse.ToXML">
            <summary>
            Retorna classe em formato XML
            </summary>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Servico.Retorno.CancelarUltimaVendaResponse">
            <summary>
            Resposta CancelarUltimaVendaResponse do SAT
            </summary>
        </member>
        <member name="F:Unimake.SAT.Servico.Retorno.CancelarUltimaVendaResponse._CodigoAdvertencia">
            <summary>
            Código da Mensagem do SEFAZ
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.CancelarUltimaVendaResponse.AssinaturaQRCode">
            <summary>
            Código QRCode
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.CancelarUltimaVendaResponse.ChaveConsulta">
            <summary>
            Chave de consulta
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.CancelarUltimaVendaResponse.CodigoAdvertencia">
            <summary>
            Código da Mensagem do SEFAZ
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.CancelarUltimaVendaResponse.CPFCNPJValue">
            <summary>
            Número do CPF ou CNPJ do adquirente
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.CancelarUltimaVendaResponse.NumeroDocumentoFiscal">
            <summary>
            Numero do documento
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.CancelarUltimaVendaResponse.ValorTotal">
            <summary>
            Valor total
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.CancelarUltimaVendaResponse.#ctor(System.String)">
            <summary>
            Construtor
            numeroSessao|EEEEE|CCCC|mensagem|cod|mensagemSEFAZ|arquivoCFeBase64|timeStamp|chaveConsulta|valorTotalCFe|CPFCNPJValue|assinaturaQRCODE
            </summary>
            <param name="response">resposta com delimitadores em pipes</param>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.CancelarUltimaVendaResponse.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.CancelarUltimaVendaResponse.ToXML">
            <summary>
            Retorna classe em formato XML
            </summary>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Servico.Retorno.ConfigurarInterfaceDeRedeResponse">
            <summary>
            Resposta Consulta SAT
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.ConfigurarInterfaceDeRedeResponse.#ctor(System.String)">
            <summary>
            Construtor
            numeroSessao|EEEEE|mensagem|cod|mensagemSEFAZ
            </summary>
            <param name="response">resposta com delimitadores em pipes</param>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.ConfigurarInterfaceDeRedeResponse.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.ConfigurarInterfaceDeRedeResponse.ToXML">
            <summary>
            Retorna classe em formato XML
            </summary>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Servico.Retorno.BloquearSATResponse">
            <summary>
            Resposta Bloquear SAT
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.BloquearSATResponse.#ctor(System.String)">
            <summary>
            Construtor
            numeroSessao|EEEEE|mensagem|cod|mensagemSEFAZ
            </summary>
            <param name="response">resposta com delimitadores em pipes</param>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.BloquearSATResponse.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.BloquearSATResponse.ToXML">
            <summary>
            Retorna classe em formato XML
            </summary>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Servico.Retorno.EnviarDadosVendaResponse">
            <summary>
            Resposta EnviarDadosVenda do SAT
            </summary>
        </member>
        <member name="F:Unimake.SAT.Servico.Retorno.EnviarDadosVendaResponse._CodigoAdvertencia">
            <summary>
            Código da Mensagem do SEFAZ
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.EnviarDadosVendaResponse.AssinaturaQRCode">
            <summary>
            Código QRCode
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.EnviarDadosVendaResponse.ChaveConsulta">
            <summary>
            Chave de consulta
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.EnviarDadosVendaResponse.CodigoAdvertencia">
            <summary>
            Código da Mensagem do SEFAZ
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.EnviarDadosVendaResponse.CPFCNPJValue">
            <summary>
            Número do CPF ou CNPJ do adquirente
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.EnviarDadosVendaResponse.NumeroDocumentoFiscal">
            <summary>
            Numero do documento
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.EnviarDadosVendaResponse.ValorTotal">
            <summary>
            Valor total
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.EnviarDadosVendaResponse.#ctor(System.String)">
            <summary>
            Construtor
            numeroSessao|EEEEE|CCCC|mensagem|cod|mensagemSEFAZ|arquivoCFeBase64|timeStamp|chaveConsulta|valorTotalCFe|CPFCNPJValue|assinaturaQRCODE
            </summary>
            <param name="response">resposta com delimitadores em pipes</param>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.EnviarDadosVendaResponse.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.EnviarDadosVendaResponse.ToXML">
            <summary>
            Retorna classe em formato XML
            </summary>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Servico.Retorno.AssociarAssinaturaResponse">
            <summary>
            Resposta Consulta SAT
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.AssociarAssinaturaResponse.#ctor(System.String)">
            <summary>
            Construtor
            numeroSessao|EEEEE|mensagem|cod|mensagemSEFAZ
            </summary>
            <param name="response">resposta com delimitadores em pipes</param>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.AssociarAssinaturaResponse.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.AssociarAssinaturaResponse.ToXML">
            <summary>
            Retorna classe em formato XML
            </summary>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Servico.Retorno.TrocarCodigoDeAtivacaoResponse">
            <summary>
            Resposta Consulta SAT
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.TrocarCodigoDeAtivacaoResponse.#ctor(System.String)">
            <summary>
            Construtor
            numeroSessao|EEEEE|mensagem|cod|mensagemSEFAZ
            </summary>
            <param name="response">resposta com delimitadores em pipes</param>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.TrocarCodigoDeAtivacaoResponse.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.TrocarCodigoDeAtivacaoResponse.ToXML">
            <summary>
            Retorna classe em formato XML
            </summary>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse">
            <summary>
            Resposta Consulta SAT
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.CertEmissao">
            <summary>
            Data emissão certificado
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.CertVencimento">
            <summary>
            Data vencimento do certificado
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.DHAtual">
            <summary>
            Data/hora atual
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.DHCFe">
            <summary>
            Data hora da CFe emitida
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.DHUltima">
            <summary>
            Data/hora da ultima emissão de CFe
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.EstadoOperacao">
            <summary>
            Status do equipamento SAT
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.LANDNS1">
            <summary>
            DNS Primário
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.LANDNS2">
            <summary>
            DNS Secundário
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.LANGW">
            <summary>
            Gateway
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.LANIP">
            <summary>
            IP configurado
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.LANMAC">
            <summary>
            Endereço MAC
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.LANMASK">
            <summary>
            Mascara
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.ListaFinal">
            <summary>
            Lista final
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.ListaInicial">
            <summary>
            Lista inicial
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.MTTotal">
            <summary>
            Memoria total
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.MTUsada">
            <summary>
            Memoria Usada
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.NivelBateria">
            <summary>
            Nível da bateria
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.NumeroSerie">
            <summary>
            Numero de serie
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.StatusLAN">
            <summary>
            Status da conexão LAN
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.TipoLAN">
            <summary>
            Configuração da LAN
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.UltimoCFeSAT">
            <summary>
            Ultimo CFe emitido
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.VerLayout">
            <summary>
            Versão do leiaute configurado
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.VerSB">
            <summary>
            Versão software
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.#ctor(System.String)">
            <summary>
            Construtor
            numeroSessao|EEEEE|mensagem|cod|mensagemSEFAZ|ConteudoRetorno
            </summary>
            <param name="response">resposta com delimitadores em pipes</param>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.ConsultarStatusOperacionalResponse.ToXML">
            <summary>
            Retorna classe em formato XML
            </summary>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Servico.Retorno.TesteFimAFimResponse">
            <summary>
            Resposta Consulta SAT
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.TesteFimAFimResponse.ChaveConsulta">
            <summary>
            Chave de consulta do documento
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.TesteFimAFimResponse.NumeroDocumentoFiscal">
            <summary>
            Numero do documento fiscal
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.TesteFimAFimResponse.#ctor(System.String)">
            <summary>
            Construtor
            numeroSessao|EEEEE|mensagem|cod|mensagemSEFAZ|arquivoCFeBase64|timeStamp|numDocFiscal|chaveConsulta
            </summary>
            <param name="response">resposta com delimitadores em pipes</param>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.TesteFimAFimResponse.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.TesteFimAFimResponse.ToXML">
            <summary>
            Retorna classe em formato XML
            </summary>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Servico.Retorno.ExtrairLogsResponse">
            <summary>
            Resposta Consulta SAT
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.ExtrairLogsResponse.Registro(System.String)">
            <summary>
            Converte linha do log para objeto
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="F:Unimake.SAT.Servico.Retorno.ExtrairLogsResponse.LogsSAT">
            <summary>
            Mensagem de Log
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.ExtrairLogsResponse.#ctor(System.String)">
            <summary>
            Construtor
            numeroSessao|EEEEE|mensagem|cod|mensagemSEFAZ|Arquivo de log em base64
            </summary>
            <param name="response">resposta com delimitadores em pipes</param>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.ExtrairLogsResponse.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.ExtrairLogsResponse.ToXML">
            <summary>
            Retorna classe em formato XML
            </summary>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Servico.Retorno.LogSAT">
            <summary>
            Objeto do Log da Mensagem
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.LogSAT.Comunicacao">
            <summary>
            Dispositivos em comunicação
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.LogSAT.DataHora">
            <summary>
            Data hora do registro
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.LogSAT.Mensagem">
            <summary>
            Mensagem
            </summary>
        </member>
        <member name="P:Unimake.SAT.Servico.Retorno.LogSAT.Tipo">
            <summary>
            Tipo de mensagem
            </summary>
        </member>
        <member name="T:Unimake.SAT.Servico.Retorno.ConsultarSATResponse">
            <summary>
            Resposta Consulta SAT
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.ConsultarSATResponse.#ctor(System.String)">
            <summary>
            Construtor
            numeroSessao|EEEEE|mensagem|cod|mensagemSEFAZ
            </summary>
            <param name="response">resposta com delimitadores em pipes</param>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.ConsultarSATResponse.#ctor">
            <summary>
            Construtor vazio
            </summary>
        </member>
        <member name="M:Unimake.SAT.Servico.Retorno.ConsultarSATResponse.ToXML">
            <summary>
            Retorna classe em formato XML
            </summary>
            <returns></returns>
        </member>
        <member name="T:Unimake.SAT.Enuns.Fabricante">
            <summary>
            Fabricantes do SAT
            </summary>
        </member>
        <member name="F:Unimake.SAT.Enuns.Fabricante.TANCA">
            <summary>
            Tanca
            </summary>
        </member>
        <member name="F:Unimake.SAT.Enuns.Fabricante.DARUMA">
            <summary>
            Daruma
            </summary>
        </member>
        <member name="F:Unimake.SAT.Enuns.Fabricante.BEMATECH">
            <summary>
            Bematech
            </summary>
        </member>
        <member name="F:Unimake.SAT.Enuns.Fabricante.DIMEP">
            <summary>
            Dimep
            </summary>
        </member>
        <member name="F:Unimake.SAT.Enuns.Fabricante.ELGIN">
            <summary>
            ELGIN Linker I
            </summary>
        </member>
        <member name="F:Unimake.SAT.Enuns.Fabricante.ELGIN_II">
            <summary>
            Elgin Linker II
            </summary>
        </member>
        <member name="F:Unimake.SAT.Enuns.Fabricante.ELGIN_SMART">
            <summary>
            Elgin SMART
            </summary>
        </member>
        <member name="F:Unimake.SAT.Enuns.Fabricante.EMULADOR">
            <summary>
            Emulador de SP
            </summary>
        </member>
        <member name="F:Unimake.SAT.Enuns.Fabricante.NITERE">
            <summary>
            Nitere
            </summary>
        </member>
        <member name="F:Unimake.SAT.Enuns.Fabricante.SWEDA">
            <summary>
            SWEDA
            </summary>
        </member>
        <member name="F:Unimake.SAT.Enuns.Fabricante.EPSON">
            <summary>
            EPSON
            </summary>
        </member>
        <member name="F:Unimake.SAT.Enuns.Fabricante.KRYPTUS">
            <summary>
            KRYPTUS
            </summary>
        </member>
        <member name="F:Unimake.SAT.Enuns.Fabricante.CONTROL_ID">
            <summary>
            CONTROL ID
            </summary>
        </member>
        <member name="F:Unimake.SAT.Enuns.Fabricante.JETWAY">
            <summary>
            JETWAY
            </summary>
        </member>
        <member name="M:Unimake.SAT.Utility.EmbeddedAssembly.Load(System.Reflection.Assembly,System.String,System.String)">
            <summary>
            Load Assembly, DLL from Embedded Resources into memory.
            </summary>
            <param name="embeddedResource">Embedded Resource string. Example: WindowsFormsApplication1.SomeTools.dll</param>
            <param name="fileName">File Name. Example: SomeTools.dll</param>
            <param name="currentAssembly">The current assembly to load the resources files</param>
        </member>
        <member name="T:Unimake.SAT.Utility.UConvert">
            <summary>
            Utilitário de conversão de tipos
            </summary>
        </member>
        <member name="M:Unimake.SAT.Utility.UConvert.ToEnum``1(System.String)">
            <summary>
            Converte a string para enum
            </summary>
            <typeparam name="T">tipo do objeto</typeparam>
            <param name="value">valor a ser convertido</param>
            <returns></returns>
        </member>
    </members>
</doc>
