//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NFe.Components.PItatingaSP {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GeisWebServiceBinding", Namespace="urn:http://www.geisweb.net.br/itatinga/webservice")]
    public partial class GeisWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ConsultaNotaGeisOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnviaLoteRPSOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultaNotaOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelaNotaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultaUltNFSeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GeisWebService() {
            this.Url = global::NFe.Components.Properties.Settings.Default.NFe_Components_PItatingaSP_GeisWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ConsultaNotaGeisCompletedEventHandler ConsultaNotaGeisCompleted;
        
        /// <remarks/>
        public event EnviaLoteRPSCompletedEventHandler EnviaLoteRPSCompleted;
        
        /// <remarks/>
        public event ConsultaNotaCompletedEventHandler ConsultaNotaCompleted;
        
        /// <remarks/>
        public event CancelaNotaCompletedEventHandler CancelaNotaCompleted;
        
        /// <remarks/>
        public event ConsultaUltNFSeCompletedEventHandler ConsultaUltNFSeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:http://www.geisweb.net.br/itatinga/webservice#ConsultaNotaGeis", RequestNamespace="urn:http://www.geisweb.net.br/itatinga/webservice", ResponseNamespace="urn:http://www.geisweb.net.br/itatinga/webservice")]
        [return: System.Xml.Serialization.SoapElementAttribute("MsgConsultaNota")]
        public string ConsultaNotaGeis(string ConsultaNota) {
            object[] results = this.Invoke("ConsultaNotaGeis", new object[] {
                        ConsultaNota});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultaNotaGeisAsync(string ConsultaNota) {
            this.ConsultaNotaGeisAsync(ConsultaNota, null);
        }
        
        /// <remarks/>
        public void ConsultaNotaGeisAsync(string ConsultaNota, object userState) {
            if ((this.ConsultaNotaGeisOperationCompleted == null)) {
                this.ConsultaNotaGeisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultaNotaGeisOperationCompleted);
            }
            this.InvokeAsync("ConsultaNotaGeis", new object[] {
                        ConsultaNota}, this.ConsultaNotaGeisOperationCompleted, userState);
        }
        
        private void OnConsultaNotaGeisOperationCompleted(object arg) {
            if ((this.ConsultaNotaGeisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultaNotaGeisCompleted(this, new ConsultaNotaGeisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:http://www.geisweb.net.br/itatinga/webservice#EnviaLoteRPS", RequestNamespace="urn:http://www.geisweb.net.br/itatinga/webservice", ResponseNamespace="urn:http://www.geisweb.net.br/itatinga/webservice")]
        [return: System.Xml.Serialization.SoapElementAttribute("Msg")]
        public string EnviaLoteRPS([System.Xml.Serialization.SoapElementAttribute("EnviaLoteRPS")] string EnviaLoteRPS1) {
            object[] results = this.Invoke("EnviaLoteRPS", new object[] {
                        EnviaLoteRPS1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EnviaLoteRPSAsync(string EnviaLoteRPS1) {
            this.EnviaLoteRPSAsync(EnviaLoteRPS1, null);
        }
        
        /// <remarks/>
        public void EnviaLoteRPSAsync(string EnviaLoteRPS1, object userState) {
            if ((this.EnviaLoteRPSOperationCompleted == null)) {
                this.EnviaLoteRPSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnviaLoteRPSOperationCompleted);
            }
            this.InvokeAsync("EnviaLoteRPS", new object[] {
                        EnviaLoteRPS1}, this.EnviaLoteRPSOperationCompleted, userState);
        }
        
        private void OnEnviaLoteRPSOperationCompleted(object arg) {
            if ((this.EnviaLoteRPSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnviaLoteRPSCompleted(this, new EnviaLoteRPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:http://www.geisweb.net.br/itatinga/webservice#ConsultaNota", RequestNamespace="urn:http://www.geisweb.net.br/itatinga/webservice", ResponseNamespace="urn:http://www.geisweb.net.br/itatinga/webservice")]
        [return: System.Xml.Serialization.SoapElementAttribute("MsgConsultaNota")]
        public string ConsultaNota([System.Xml.Serialization.SoapElementAttribute("ConsultaNota")] string ConsultaNota1) {
            object[] results = this.Invoke("ConsultaNota", new object[] {
                        ConsultaNota1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultaNotaAsync(string ConsultaNota1) {
            this.ConsultaNotaAsync(ConsultaNota1, null);
        }
        
        /// <remarks/>
        public void ConsultaNotaAsync(string ConsultaNota1, object userState) {
            if ((this.ConsultaNotaOperationCompleted == null)) {
                this.ConsultaNotaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultaNotaOperationCompleted);
            }
            this.InvokeAsync("ConsultaNota", new object[] {
                        ConsultaNota1}, this.ConsultaNotaOperationCompleted, userState);
        }
        
        private void OnConsultaNotaOperationCompleted(object arg) {
            if ((this.ConsultaNotaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultaNotaCompleted(this, new ConsultaNotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:http://www.geisweb.net.br/itatinga/webservice#CancelaNota", RequestNamespace="urn:http://www.geisweb.net.br/itatinga/webservice", ResponseNamespace="urn:http://www.geisweb.net.br/itatinga/webservice")]
        [return: System.Xml.Serialization.SoapElementAttribute("MsgCancelaNota")]
        public string CancelaNota([System.Xml.Serialization.SoapElementAttribute("CancelaNota")] string CancelaNota1) {
            object[] results = this.Invoke("CancelaNota", new object[] {
                        CancelaNota1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelaNotaAsync(string CancelaNota1) {
            this.CancelaNotaAsync(CancelaNota1, null);
        }
        
        /// <remarks/>
        public void CancelaNotaAsync(string CancelaNota1, object userState) {
            if ((this.CancelaNotaOperationCompleted == null)) {
                this.CancelaNotaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelaNotaOperationCompleted);
            }
            this.InvokeAsync("CancelaNota", new object[] {
                        CancelaNota1}, this.CancelaNotaOperationCompleted, userState);
        }
        
        private void OnCancelaNotaOperationCompleted(object arg) {
            if ((this.CancelaNotaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelaNotaCompleted(this, new CancelaNotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:http://www.geisweb.net.br/itatinga/webservice#ConsultaUltNFSe", RequestNamespace="urn:http://www.geisweb.net.br/itatinga/webservice", ResponseNamespace="urn:http://www.geisweb.net.br/itatinga/webservice")]
        [return: System.Xml.Serialization.SoapElementAttribute("MsgConsultaUltNFSe")]
        public string ConsultaUltNFSe([System.Xml.Serialization.SoapElementAttribute("ConsultaUltNFSe")] string ConsultaUltNFSe1) {
            object[] results = this.Invoke("ConsultaUltNFSe", new object[] {
                        ConsultaUltNFSe1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultaUltNFSeAsync(string ConsultaUltNFSe1) {
            this.ConsultaUltNFSeAsync(ConsultaUltNFSe1, null);
        }
        
        /// <remarks/>
        public void ConsultaUltNFSeAsync(string ConsultaUltNFSe1, object userState) {
            if ((this.ConsultaUltNFSeOperationCompleted == null)) {
                this.ConsultaUltNFSeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultaUltNFSeOperationCompleted);
            }
            this.InvokeAsync("ConsultaUltNFSe", new object[] {
                        ConsultaUltNFSe1}, this.ConsultaUltNFSeOperationCompleted, userState);
        }
        
        private void OnConsultaUltNFSeOperationCompleted(object arg) {
            if ((this.ConsultaUltNFSeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultaUltNFSeCompleted(this, new ConsultaUltNFSeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ConsultaNotaGeisCompletedEventHandler(object sender, ConsultaNotaGeisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultaNotaGeisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultaNotaGeisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EnviaLoteRPSCompletedEventHandler(object sender, EnviaLoteRPSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnviaLoteRPSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnviaLoteRPSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ConsultaNotaCompletedEventHandler(object sender, ConsultaNotaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultaNotaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultaNotaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CancelaNotaCompletedEventHandler(object sender, CancelaNotaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelaNotaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelaNotaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ConsultaUltNFSeCompletedEventHandler(object sender, ConsultaUltNFSeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultaUltNFSeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultaUltNFSeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591